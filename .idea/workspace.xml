<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BranchesTreeState">
    <expand>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </expand>
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e71e3968-e7af-4df1-adb9-986cabb8ecaf" name="Default Changelist" comment="End of evening with markdown">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/resources/css/main.css" beforeDir="false" afterPath="$PROJECT_DIR$/resources/css/main.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/split_text/config.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/split_text/config.clj" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DepsProjectDetails">
    <option name="cachedModuleDetails">
      <map>
        <entry key="$PROJECT_DIR$/deps.edn">
          <value>
            <ModuleDetails>
              <option name="details" value="{:paths [&quot;src&quot;], :deps {org.clojure/data.json {:mvn/version &quot;1.0.0&quot;}, org.clojure/clojure {:mvn/version &quot;1.10.1&quot;}, juxt/crux-lmdb {:mvn/version &quot;20.05-1.8.3-alpha&quot;}, clj-http/clj-http {:mvn/version &quot;3.10.1&quot;}, hiccup/hiccup {:mvn/version &quot;2.0.0-alpha2&quot;}, juxt/crux-rocksdb {:mvn/version &quot;20.05-1.8.3-alpha&quot;}, metosin/reitit-malli {:mvn/version &quot;0.5.1&quot;}, hickory/hickory {:mvn/version &quot;0.7.1&quot;}, com.rpl/specter {:mvn/version &quot;1.1.3&quot;}, juxt/crux-core {:mvn/version &quot;20.05-1.8.3-alpha&quot;}, lambdaisland/uri {:mvn/version &quot;1.3.45&quot;}}, :aliases {:deps {:extra-deps {org.clojure/tools.deps.alpha {:mvn/version &quot;0.6.496&quot;}}}, :test {:extra-paths [&quot;test&quot;]}}, :mvn/repos {&quot;central&quot; {:url &quot;https://repo1.maven.org/maven2/&quot;}, &quot;clojars&quot; {:url &quot;https://repo.clojars.org/&quot;}}, :system-aliases #{:test :deps}, :deps-tree {org.clojure/data.json {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\data.json\\1.0.0\\data.json-1.0.0.jar&quot;], :children ()}, org.clojure/clojure {:mvn/version &quot;1.10.1&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\clojure\\1.10.1\\clojure-1.10.1.jar&quot;], :children (org.clojure/core.specs.alpha org.clojure/spec.alpha)}, joda-time/joda-time {:mvn/version &quot;2.7&quot;, :deps/manifest :mvn, :dependents [clj-time/clj-time], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\joda-time\\joda-time\\2.7\\joda-time-2.7.jar&quot;], :children ()}, com.github.jnr/jnr-ffi {:mvn/version &quot;2.1.12&quot;, :deps/manifest :mvn, :dependents [juxt/crux-rocksdb], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\github\\jnr\\jnr-ffi\\2.1.12\\jnr-ffi-2.1.12.jar&quot;], :children (com.github.jnr/jffi$native org.ow2.asm/asm-util org.ow2.asm/asm com.github.jnr/jnr-a64asm org.ow2.asm/asm-commons com.github.jnr/jnr-x86asm com.github.jnr/jffi org.ow2.asm/asm-analysis org.ow2.asm/asm-tree)}, commons-codec/commons-codec {:mvn/version &quot;1.12&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\commons-codec\\commons-codec\\1.12\\commons-codec-1.12.jar&quot;], :children ()}, org.clojure/tools.logging {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :dependents [juxt/crux-core], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\tools.logging\\1.0.0\\tools.logging-1.0.0.jar&quot;], :children ()}, org.clojure/core.specs.alpha {:mvn/version &quot;0.2.44&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojure], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\core.specs.alpha\\0.2.44\\core.specs.alpha-0.2.44.jar&quot;], :children ()}, org.tukaani/xz {:mvn/version &quot;1.6&quot;, :deps/manifest :mvn, :dependents [com.taoensso/nippy], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\tukaani\\xz\\1.6\\xz-1.6.jar&quot;], :children ()}, org.lwjgl/lwjgl$natives-macos {:mvn/version &quot;3.2.3&quot;, :deps/manifest :mvn, :dependents [juxt/crux-lmdb], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\lwjgl\\lwjgl\\3.2.3\\lwjgl-3.2.3-natives-macos.jar&quot;], :children ()}, org.clojure/spec.alpha {:mvn/version &quot;0.2.176&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojure], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\spec.alpha\\0.2.176\\spec.alpha-0.2.176.jar&quot;], :children ()}, org.lmdbjava/lmdbjava {:mvn/version &quot;0.7.0&quot;, :exclusions #{com.github.jnr/jffi}, :deps/manifest :mvn, :dependents [juxt/crux-lmdb], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\lmdbjava\\lmdbjava\\0.7.0\\lmdbjava-0.7.0.jar&quot;], :children (com.github.jnr/jnr-constants)}, com.taoensso/encore {:mvn/version &quot;2.114.0&quot;, :deps/manifest :mvn, :dependents [juxt/crux-core], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\taoensso\\encore\\2.114.0\\encore-2.114.0.jar&quot;], :children (com.taoensso/truss)}, org.apache.httpcomponents/httpasyncclient {:mvn/version &quot;4.1.4&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\apache\\httpcomponents\\httpasyncclient\\4.1.4\\httpasyncclient-4.1.4.jar&quot;], :children (org.apache.httpcomponents/httpcore-nio)}, org.rocksdb/rocksdbjni {:mvn/version &quot;6.5.3&quot;, :deps/manifest :mvn, :dependents [juxt/crux-rocksdb], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\rocksdb\\rocksdbjni\\6.5.3\\rocksdbjni-6.5.3.jar&quot;], :children ()}, com.github.jnr/jnr-constants {:mvn/version &quot;0.9.12&quot;, :deps/manifest :mvn, :dependents [org.lmdbjava/lmdbjava], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\github\\jnr\\jnr-constants\\0.9.12\\jnr-constants-0.9.12.jar&quot;], :children ()}, com.github.jnr/jffi$native {:mvn/version &quot;1.2.23&quot;, :deps/manifest :mvn, :dependents [com.github.jnr/jnr-ffi], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\github\\jnr\\jffi\\1.2.23\\jffi-1.2.23-native.jar&quot;], :children ()}, net.jpountz.lz4/lz4 {:mvn/version &quot;1.3&quot;, :deps/manifest :mvn, :dependents [com.taoensso/nippy], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\net\\jpountz\\lz4\\lz4\\1.3\\lz4-1.3.jar&quot;], :children ()}, juxt/crux-lmdb {:mvn/version &quot;20.05-1.8.3-alpha&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\juxt\\crux-lmdb\\20.05-1.8.3-alpha\\crux-lmdb-20.05-1.8.3-alpha.jar&quot;], :children (org.lwjgl/lwjgl$natives-macos org.lmdbjava/lmdbjava org.lwjgl/lwjgl-lmdb org.lwjgl/lwjgl-lmdb$natives-macos org.lwjgl/lwjgl$natives-linux org.lwjgl/lwjgl-lmdb$natives-linux)}, org.lwjgl/lwjgl-lmdb {:mvn/version &quot;3.2.3&quot;, :deps/manifest :mvn, :dependents [juxt/crux-lmdb], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\lwjgl\\lwjgl-lmdb\\3.2.3\\lwjgl-lmdb-3.2.3.jar&quot;], :children ()}, com.gfredericks/test.chuck {:mvn/version &quot;0.2.10&quot;, :deps/manifest :mvn, :dependents [metosin/malli], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\gfredericks\\test.chuck\\0.2.10\\test.chuck-0.2.10.jar&quot;], :children (clj-time/clj-time instaparse/instaparse com.andrewmcveigh/cljs-time)}, org.iq80.snappy/snappy {:mvn/version &quot;0.4&quot;, :deps/manifest :mvn, :dependents [com.taoensso/nippy], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\iq80\\snappy\\snappy\\0.4\\snappy-0.4.jar&quot;], :children ()}, org.clojure/google-closure-library {:mvn/version &quot;0.0-20160609-f42b4a24&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojurescript], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\google-closure-library\\0.0-20160609-f42b4a24\\google-closure-library-0.0-20160609-f42b4a24.jar&quot;], :children (org.clojure/google-closure-library-third-party)}, org.clojure/clojurescript {:mvn/version &quot;1.9.293&quot;, :deps/manifest :mvn, :dependents [hickory/hickory], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\clojurescript\\1.9.293\\clojurescript-1.9.293.jar&quot;], :children (org.clojure/google-closure-library org.mozilla/rhino com.google.javascript/closure-compiler-unshaded)}, slingshot/slingshot {:mvn/version &quot;0.12.2&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\slingshot\\slingshot\\0.12.2\\slingshot-0.12.2.jar&quot;], :children ()}, org.apache.httpcomponents/httpcore-nio {:mvn/version &quot;4.4.10&quot;, :deps/manifest :mvn, :dependents [org.apache.httpcomponents/httpasyncclient], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\apache\\httpcomponents\\httpcore-nio\\4.4.10\\httpcore-nio-4.4.10.jar&quot;], :children ()}, commons-io/commons-io {:mvn/version &quot;2.6&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\commons-io\\commons-io\\2.6\\commons-io-2.6.jar&quot;], :children ()}, org.ow2.asm/asm-util {:mvn/version &quot;7.1&quot;, :deps/manifest :mvn, :dependents [com.github.jnr/jnr-ffi], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\ow2\\asm\\asm-util\\7.1\\asm-util-7.1.jar&quot;], :children ()}, com.google.jsinterop/jsinterop-annotations {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :dependents [com.google.javascript/closure-compiler-unshaded], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\google\\jsinterop\\jsinterop-annotations\\1.0.0\\jsinterop-annotations-1.0.0.jar&quot;], :children ()}, clj-time/clj-time {:mvn/version &quot;0.10.0&quot;, :deps/manifest :mvn, :dependents [com.gfredericks/test.chuck], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\clj-time\\clj-time\\0.10.0\\clj-time-0.10.0.jar&quot;], :children (joda-time/joda-time)}, org.agrona/agrona {:mvn/version &quot;1.0.7&quot;, :deps/manifest :mvn, :dependents [juxt/crux-core], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\agrona\\agrona\\1.0.7\\agrona-1.0.7.jar&quot;], :children ()}, clj-http/clj-http {:mvn/version &quot;3.10.1&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\clj-http\\clj-http\\3.10.1\\clj-http-3.10.1.jar&quot;], :children (commons-codec/commons-codec org.apache.httpcomponents/httpasyncclient slingshot/slingshot commons-io/commons-io org.apache.httpcomponents/httpcore org.apache.httpcomponents/httpclient-cache org.apache.httpcomponents/httpclient potemkin/potemkin org.apache.httpcomponents/httpmime)}, org.ow2.asm/asm {:mvn/version &quot;7.1&quot;, :deps/manifest :mvn, :dependents [com.github.jnr/jnr-ffi], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\ow2\\asm\\asm\\7.1\\asm-7.1.jar&quot;], :children ()}, com.github.jnr/jnr-a64asm {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :dependents [com.github.jnr/jnr-ffi], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\github\\jnr\\jnr-a64asm\\1.0.0\\jnr-a64asm-1.0.0.jar&quot;], :children ()}, org.apache.httpcomponents/httpcore {:mvn/version &quot;4.4.12&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\apache\\httpcomponents\\httpcore\\4.4.12\\httpcore-4.4.12.jar&quot;], :children ()}, org.apache.httpcomponents/httpclient-cache {:mvn/version &quot;4.5.10&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\apache\\httpcomponents\\httpclient-cache\\4.5.10\\httpclient-cache-4.5.10.jar&quot;], :children ()}, instaparse/instaparse {:mvn/version &quot;1.3.6&quot;, :deps/manifest :mvn, :dependents [com.gfredericks/test.chuck], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\instaparse\\instaparse\\1.3.6\\instaparse-1.3.6.jar&quot;], :children ()}, org.lwjgl/lwjgl-lmdb$natives-macos {:mvn/version &quot;3.2.3&quot;, :deps/manifest :mvn, :dependents [juxt/crux-lmdb], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\lwjgl\\lwjgl-lmdb\\3.2.3\\lwjgl-lmdb-3.2.3-natives-macos.jar&quot;], :children ()}, clj-tuple/clj-tuple {:mvn/version &quot;0.2.2&quot;, :deps/manifest :mvn, :dependents [potemkin/potemkin], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\clj-tuple\\clj-tuple\\0.2.2\\clj-tuple-0.2.2.jar&quot;], :children ()}, metosin/reitit-core {:mvn/version &quot;0.5.1&quot;, :deps/manifest :mvn, :dependents [metosin/reitit-malli], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\metosin\\reitit-core\\0.5.1\\reitit-core-0.5.1.jar&quot;], :children (meta-merge/meta-merge)}, org.mozilla/rhino {:mvn/version &quot;1.7R5&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojurescript], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\mozilla\\rhino\\1.7R5\\rhino-1.7R5.jar&quot;], :children ()}, com.taoensso/truss {:mvn/version &quot;1.5.0&quot;, :deps/manifest :mvn, :dependents [com.taoensso/encore], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\taoensso\\truss\\1.5.0\\truss-1.5.0.jar&quot;], :children ()}, org.clojure/google-closure-library-third-party {:mvn/version &quot;0.0-20160609-f42b4a24&quot;, :deps/manifest :mvn, :dependents [org.clojure/google-closure-library], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\google-closure-library-third-party\\0.0-20160609-f42b4a24\\google-closure-library-third-party-0.0-20160609-f42b4a24.jar&quot;], :children ()}, hiccup/hiccup {:mvn/version &quot;2.0.0-alpha2&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\hiccup\\hiccup\\2.0.0-alpha2\\hiccup-2.0.0-alpha2.jar&quot;], :children ()}, org.lwjgl/lwjgl {:mvn/version &quot;3.2.3&quot;, :deps/manifest :mvn, :dependents [org.lwjgl/lwjgl-lmdb$natives-linux], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\lwjgl\\lwjgl\\3.2.3\\lwjgl-3.2.3.jar&quot;], :children ()}, riddley/riddley {:mvn/version &quot;0.1.12&quot;, :deps/manifest :mvn, :dependents [com.rpl/specter], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\riddley\\riddley\\0.1.12\\riddley-0.1.12.jar&quot;], :children ()}, com.google.javascript/closure-compiler-externs {:mvn/version &quot;v20160911&quot;, :deps/manifest :mvn, :dependents [com.google.javascript/closure-compiler-unshaded], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\google\\javascript\\closure-compiler-externs\\v20160911\\closure-compiler-externs-v20160911.jar&quot;], :children ()}, juxt/crux-rocksdb {:mvn/version &quot;20.05-1.8.3-alpha&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\juxt\\crux-rocksdb\\20.05-1.8.3-alpha\\crux-rocksdb-20.05-1.8.3-alpha.jar&quot;], :children (com.github.jnr/jnr-ffi org.rocksdb/rocksdbjni)}, commons-logging/commons-logging {:mvn/version &quot;1.2&quot;, :deps/manifest :mvn, :dependents [org.apache.httpcomponents/httpclient], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\commons-logging\\commons-logging\\1.2\\commons-logging-1.2.jar&quot;], :children ()}, com.google.guava/guava {:mvn/version &quot;19.0&quot;, :deps/manifest :mvn, :dependents [com.google.javascript/closure-compiler-unshaded], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\google\\guava\\guava\\19.0\\guava-19.0.jar&quot;], :children ()}, viebel/codox-klipse-theme {:mvn/version &quot;0.0.1&quot;, :deps/manifest :mvn, :dependents [hickory/hickory], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\viebel\\codox-klipse-theme\\0.0.1\\codox-klipse-theme-0.0.1.jar&quot;], :children ()}, borkdude/edamame {:mvn/version &quot;0.0.7&quot;, :deps/manifest :mvn, :dependents [borkdude/sci], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\borkdude\\edamame\\0.0.7\\edamame-0.0.7.jar&quot;], :children ()}, metosin/malli {:mvn/version &quot;0.0.1-20200404.091302-14&quot;, :deps/manifest :mvn, :dependents [metosin/reitit-malli], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\metosin\\malli\\0.0.1-SNAPSHOT\\malli-0.0.1-SNAPSHOT.jar&quot;], :children (com.gfredericks/test.chuck org.clojure/test.check borkdude/sci)}, quoin/quoin {:mvn/version &quot;0.1.2&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [hickory/hickory], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\quoin\\quoin\\0.1.2\\quoin-0.1.2.jar&quot;], :children ()}, args4j/args4j {:mvn/version &quot;2.0.26&quot;, :deps/manifest :mvn, :dependents [com.google.javascript/closure-compiler-unshaded], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\args4j\\args4j\\2.0.26\\args4j-2.0.26.jar&quot;], :children ()}, org.ow2.asm/asm-commons {:mvn/version &quot;7.1&quot;, :deps/manifest :mvn, :dependents [com.github.jnr/jnr-ffi], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\ow2\\asm\\asm-commons\\7.1\\asm-commons-7.1.jar&quot;], :children ()}, metosin/reitit-malli {:mvn/version &quot;0.5.1&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\metosin\\reitit-malli\\0.5.1\\reitit-malli-0.5.1.jar&quot;], :children (metosin/reitit-core metosin/malli)}, org.apache.httpcomponents/httpclient {:mvn/version &quot;4.5.10&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\apache\\httpcomponents\\httpclient\\4.5.10\\httpclient-4.5.10.jar&quot;], :children (commons-logging/commons-logging)}, hickory/hickory {:mvn/version &quot;0.7.1&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\hickory\\hickory\\0.7.1\\hickory-0.7.1.jar&quot;], :children (org.clojure/clojurescript viebel/codox-klipse-theme quoin/quoin org.jsoup/jsoup)}, com.andrewmcveigh/cljs-time {:mvn/version &quot;0.5.1&quot;, :deps/manifest :mvn, :dependents [com.gfredericks/test.chuck], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\andrewmcveigh\\cljs-time\\0.5.1\\cljs-time-0.5.1.jar&quot;], :children ()}, org.lwjgl/lwjgl$natives-linux {:mvn/version &quot;3.2.3&quot;, :deps/manifest :mvn, :dependents [juxt/crux-lmdb], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\lwjgl\\lwjgl\\3.2.3\\lwjgl-3.2.3-natives-linux.jar&quot;], :children ()}, org.clojure/tools.reader {:mvn/version &quot;1.3.2&quot;, :deps/manifest :mvn, :dependents [juxt/crux-core], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\tools.reader\\1.3.2\\tools.reader-1.3.2.jar&quot;], :children ()}, com.github.jnr/jnr-x86asm {:mvn/version &quot;1.0.2&quot;, :deps/manifest :mvn, :dependents [com.github.jnr/jnr-ffi], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\github\\jnr\\jnr-x86asm\\1.0.2\\jnr-x86asm-1.0.2.jar&quot;], :children ()}, org.jsoup/jsoup {:mvn/version &quot;1.9.2&quot;, :deps/manifest :mvn, :dependents [hickory/hickory], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\jsoup\\jsoup\\1.9.2\\jsoup-1.9.2.jar&quot;], :children ()}, com.taoensso/nippy {:mvn/version &quot;2.14.0&quot;, :deps/manifest :mvn, :dependents [juxt/crux-core], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\taoensso\\nippy\\2.14.0\\nippy-2.14.0.jar&quot;], :children (org.tukaani/xz net.jpountz.lz4/lz4 org.iq80.snappy/snappy)}, potemkin/potemkin {:mvn/version &quot;0.4.5&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\potemkin\\potemkin\\0.4.5\\potemkin-0.4.5.jar&quot;], :children (clj-tuple/clj-tuple)}, com.github.jnr/jffi {:mvn/version &quot;1.2.23&quot;, :deps/manifest :mvn, :dependents [com.github.jnr/jnr-ffi], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\github\\jnr\\jffi\\1.2.23\\jffi-1.2.23.jar&quot;], :children ()}, com.rpl/specter {:mvn/version &quot;1.1.3&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\rpl\\specter\\1.1.3\\specter-1.1.3.jar&quot;], :children (riddley/riddley)}, org.slf4j/slf4j-api {:mvn/version &quot;1.7.29&quot;, :deps/manifest :mvn, :dependents [juxt/crux-core], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\slf4j\\slf4j-api\\1.7.29\\slf4j-api-1.7.29.jar&quot;], :children ()}, com.google.javascript/closure-compiler-unshaded {:mvn/version &quot;v20160911&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojurescript], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\google\\javascript\\closure-compiler-unshaded\\v20160911\\closure-compiler-unshaded-v20160911.jar&quot;], :children (com.google.jsinterop/jsinterop-annotations com.google.javascript/closure-compiler-externs com.google.guava/guava args4j/args4j com.google.protobuf/protobuf-java com.google.code.findbugs/jsr305 com.google.code.gson/gson)}, org.clojure/test.check {:mvn/version &quot;0.10.0&quot;, :deps/manifest :mvn, :dependents [metosin/malli], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\test.check\\0.10.0\\test.check-0.10.0.jar&quot;], :children ()}, org.ow2.asm/asm-analysis {:mvn/version &quot;7.1&quot;, :deps/manifest :mvn, :dependents [com.github.jnr/jnr-ffi], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\ow2\\asm\\asm-analysis\\7.1\\asm-analysis-7.1.jar&quot;], :children ()}, juxt/crux-core {:mvn/version &quot;20.05-1.8.3-alpha&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\juxt\\crux-core\\20.05-1.8.3-alpha\\crux-core-20.05-1.8.3-alpha.jar&quot;], :children (org.clojure/tools.logging com.taoensso/encore org.agrona/agrona org.clojure/tools.reader com.taoensso/nippy org.slf4j/slf4j-api com.stuartsierra/dependency)}, lambdaisland/uri {:mvn/version &quot;1.3.45&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\lambdaisland\\uri\\1.3.45\\uri-1.3.45.jar&quot;], :children ()}, com.google.protobuf/protobuf-java {:mvn/version &quot;2.5.0&quot;, :deps/manifest :mvn, :dependents [com.google.javascript/closure-compiler-unshaded], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\google\\protobuf\\protobuf-java\\2.5.0\\protobuf-java-2.5.0.jar&quot;], :children ()}, com.stuartsierra/dependency {:mvn/version &quot;0.2.0&quot;, :deps/manifest :mvn, :dependents [juxt/crux-core], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\stuartsierra\\dependency\\0.2.0\\dependency-0.2.0.jar&quot;], :children ()}, org.lwjgl/lwjgl-lmdb$natives-linux {:mvn/version &quot;3.2.3&quot;, :deps/manifest :mvn, :dependents [juxt/crux-lmdb], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\lwjgl\\lwjgl-lmdb\\3.2.3\\lwjgl-lmdb-3.2.3-natives-linux.jar&quot;], :children (org.lwjgl/lwjgl)}, borkdude/sci {:mvn/version &quot;0.0.11-alpha.2&quot;, :deps/manifest :mvn, :dependents [metosin/malli], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\borkdude\\sci\\0.0.11-alpha.2\\sci-0.0.11-alpha.2.jar&quot;], :children (borkdude/edamame)}, org.apache.httpcomponents/httpmime {:mvn/version &quot;4.5.10&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\apache\\httpcomponents\\httpmime\\4.5.10\\httpmime-4.5.10.jar&quot;], :children ()}, com.google.code.findbugs/jsr305 {:mvn/version &quot;1.3.9&quot;, :deps/manifest :mvn, :dependents [com.google.javascript/closure-compiler-unshaded], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\google\\code\\findbugs\\jsr305\\1.3.9\\jsr305-1.3.9.jar&quot;], :children ()}, meta-merge/meta-merge {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :dependents [metosin/reitit-core], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\meta-merge\\meta-merge\\1.0.0\\meta-merge-1.0.0.jar&quot;], :children ()}, org.ow2.asm/asm-tree {:mvn/version &quot;7.1&quot;, :deps/manifest :mvn, :dependents [com.github.jnr/jnr-ffi], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\ow2\\asm\\asm-tree\\7.1\\asm-tree-7.1.jar&quot;], :children ()}, com.google.code.gson/gson {:mvn/version &quot;2.2.4&quot;, :deps/manifest :mvn, :dependents [com.google.javascript/closure-compiler-unshaded], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\google\\code\\gson\\gson\\2.2.4\\gson-2.2.4.jar&quot;], :children ()}}, :test-paths [&quot;test&quot;]}" />
              <option name="hash" value="f98bae558f35ab73cf15b9ea1bbdf604" />
            </ModuleDetails>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1bz5Y2j2j21xIBm3ZWy9ZqBFJOE" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="GoToNamespace.includeLibraries" value="false" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="cursive.last.file.extension.C\:/Users/MartinRoberts/private_projects/split-text/src" value="clj" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
  </component>
  <component name="ReplState" timestamp="1590226672429">{:repl-history {:ide [], :local [{:command &quot;(reduce concat [] (:content x))&quot;, :offset 31, :ns &quot;split-text.core&quot;} {:command &quot;(reduce conj (:content x))&quot;, :offset 26, :ns &quot;split-text.core&quot;} {:command &quot;(reduce conj (map (:content %) x))&quot;, :offset 34, :ns &quot;split-text.core&quot;} {:command &quot;(reduce conj (map #(:content %) x))&quot;, :offset 35, :ns &quot;split-text.core&quot;} {:command &quot;(reduce str/join (map #(:content %) x))&quot;, :offset 39, :ns &quot;split-text.core&quot;} {:command &quot;(reduce into [] (map #(:content %) x))&quot;, :offset 38, :ns &quot;split-text.core&quot;} {:command &quot;(str/join \&quot;\&quot;(reduce into [] (map #(:content %) x)))&quot;, :offset 51, :ns &quot;split-text.core&quot;} {:command &quot;(sort (group-by (juxt :chapter :vint :class :tag :subtag) (output-bo-book-content doc)))&quot;, :offset 88, :ns &quot;split-text.core&quot;} {:command &quot;x&quot;, :offset 1, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n    (group-by (juxt :chapter :vint :class :tag :subtag)))&quot;, :offset 91, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n    (group-by (juxt :chapter :vint :class :tag :subtag))\n    (sort))&quot;, :offset 102, :ns &quot;split-text.core&quot;} {:command &quot;(select ALL\n        (-&gt;&gt; (output-bo-book-content doc)\n             (group-by (juxt :chapter :vint :class :tag :subtag))\n             (sort)))&quot;, :offset 141, :ns &quot;split-text.core&quot;} {:command &quot;(select [ALL LAST]\n        (-&gt;&gt; (output-bo-book-content doc)\n             (group-by (juxt :chapter :vint :class :tag :subtag))\n             (sort)))&quot;, :offset 148, :ns &quot;split-text.core&quot;} {:command &quot;(def doc (process-doc filename)\n\n;(def dbr (get-ready-for-crux doc))\n\n;;(load-content cruxdb dbr)\n\n\n\n;(str/join \&quot;\&quot;(select [ALL LAST] (get-text cruxdb \&quot;James\&quot; 1 \&quot;1\&quot; :bo)))\n  \n        (-&gt;&gt; (output-bo-book-content doc)\n             (group-by (juxt :chapter :vint :class :tag :subtag))\n             (sort)\n             (select [ALL LAST])\n             (map #(:content %))\n             (reduce into [])))&quot;, :offset 399, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n     (group-by (juxt :chapter :vint :class :tag :subtag))\n     (sort)\n     (select [ALL LAST])\n     (map #(:content %))\n     (reduce into []))&quot;, :offset 176, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n     (group-by (juxt :chapter :vint :class :tag :subtag))\n     (sort)\n     (select [ALL LAST])\n     (map #(:content %)))&quot;, :offset 154, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n     (group-by (juxt :chapter :vint :class :tag :subtag))\n     (sort)\n     (select [ALL LAST]))&quot;, :offset 129, :ns &quot;split-text.core&quot;} {:command &quot;def x [{:vint 20,\n        :subindex 6,\n        :verse \&quot;20\&quot;,\n        :index 262,\n        :content [\&quot;20\&quot;],\n        :chapter 5,\n        :sub-type :verse-number,\n        :class :bo,\n        :tag :p,\n        :subtag :span}\n       {:vint 20,\n        :subindex 8,\n        :verse \&quot;20\&quot;,\n        :index 262,\n        :content [\&quot;[འབྲས་བུ་བཟང་པོ་ཞིག་ཐོན་གྱི་ཡིན་པའི་ཁྱེད་རང་ཚོ་ངེས་གཏན་བྱེད་ཆོག་གི་རེད།]  སྡིག་\&quot;],\n        :chapter 5,\n        :class :bo,\n        :tag :p,\n        :subtag :span}\n       {:vint 20,\n        :subindex 0,\n        :verse \&quot;20\&quot;,\n        :index 263,\n        :content [\&quot;ཅན་དེ་ལམ་ལོག་པ་ནས་ཚུར་འཁྲིད་ཡོང་མཁན་དེས་མི་དེ་མཐའ་མེད་པའི་འཆི་བ་[དམྱལ་བ་]  ནས་བསྐྱབ་\&quot;],\n        :chapter 5,\n        :class :bo,\n        :tag :p,\n        :subtag :span}\n       {:vint 20,\n        :subindex 0,\n        :verse \&quot;20\&quot;,\n        :index 264,\n        :content [\&quot;ཀྱི་རེད།  ཁོང་གི་སྙིང་རྗེ་ཅན་གྱི་བྱ་སྤྱོད་དེ་ལ་བརྟེན་ནས་འགྱོད་སེམས་ཅན་གྱི་སྡིག་ཅན་དེའི་སྡིག་པ་མང་\&quot;],\n        :chapter 5,\n        :class :bo,\n        :tag :p,\n        :subtag :span}\n       {:vint 20,\n        :subindex 0,\n        :verse \&quot;20\&quot;,\n        :index 265,\n        :content [\&quot;པོ་ལ་[དཀོན་མཆོག་གིས་]  སྡིག་སེལ་གནང་གི་རེད།  \&quot;],\n        :chapter 5,\n        :class :bo,\n        :tag :p,\n        :subtag :span}]&quot;, :offset 1255, :ns &quot;split-text.core&quot;} {:command &quot;(map #(:content %) x)&quot;, :offset 21, :ns &quot;split-text.core&quot;} {:command &quot;(def z [{:vint 20,\n         :subindex 6,\n         :verse \&quot;20\&quot;,\n         :index 262,\n         :content [\&quot;20\&quot;],\n         :chapter 5,\n         :sub-type :verse-number,\n         :class :bo,\n         :tag :p,\n         :subtag :span}\n        {:vint 20,\n         :subindex 8,\n         :verse \&quot;20\&quot;,\n         :index 262,\n         :content [\&quot;[འབྲས་བུ་བཟང་པོ་ཞིག་ཐོན་གྱི་ཡིན་པའི་ཁྱེད་རང་ཚོ་ངེས་གཏན་བྱེད་ཆོག་གི་རེད།]  སྡིག་\&quot;],\n         :chapter 5,\n         :class :bo,\n         :tag :p,\n         :subtag :span}\n        {:vint 20,\n         :subindex 0,\n         :verse \&quot;20\&quot;,\n         :index 263,\n         :content [\&quot;ཅན་དེ་ལམ་ལོག་པ་ནས་ཚུར་འཁྲིད་ཡོང་མཁན་དེས་མི་དེ་མཐའ་མེད་པའི་འཆི་བ་[དམྱལ་བ་]  ནས་བསྐྱབ་\&quot;],\n         :chapter 5,\n         :class :bo,\n         :tag :p,\n         :subtag :span}\n        {:vint 20,\n         :subindex 0,\n         :verse \&quot;20\&quot;,\n         :index 264,\n         :content [\&quot;ཀྱི་རེད།  ཁོང་གི་སྙིང་རྗེ་ཅན་གྱི་བྱ་སྤྱོད་དེ་ལ་བརྟེན་ནས་འགྱོད་སེམས་ཅན་གྱི་སྡིག་ཅན་དེའི་སྡིག་པ་མང་\&quot;],\n         :chapter 5,\n         :class :bo,\n         :tag :p,\n         :subtag :span}\n        {:vint 20,\n         :subindex 0,\n         :verse \&quot;20\&quot;,\n         :index 265,\n         :content [\&quot;པོ་ལ་[དཀོན་མཆོག་གིས་]  སྡིག་སེལ་གནང་གི་རེད།  \&quot;],\n         :chapter 5,\n         :class :bo,\n         :tag :p,\n         :subtag :span}])&quot;, :offset 1302, :ns &quot;split-text.core&quot;} {:command &quot;(map #(:content %) z)&quot;, :offset 21, :ns &quot;split-text.core&quot;} {:command &quot;(def y (-&gt;&gt; (output-bo-book-content doc)\n            (group-by (juxt :chapter :vint :class :tag :subtag))\n            (sort)))&quot;, :offset 126, :ns &quot;split-text.core&quot;} {:command &quot;(first y)&quot;, :offset 9, :ns &quot;split-text.core&quot;} {:command &quot;(nth  y 10)&quot;, :offset 11, :ns &quot;split-text.core&quot;} {:command &quot;(select [ALL] y)&quot;, :offset 16, :ns &quot;split-text.core&quot;} {:command &quot;(select [ALL LAST] y)&quot;, :offset 21, :ns &quot;split-text.core&quot;} {:command &quot;(map #(:content %))&quot;, :offset 18} {:command &quot;(map #(:content %)(select [ALL LAST] y))&quot;, :offset 40, :ns &quot;split-text.core&quot;} {:command &quot;(map #(:content %)(select [ALL LAST LAST] y))&quot;, :offset 45, :ns &quot;split-text.core&quot;} {:command &quot;(def doc (process-doc filename)\n\n;(def dbr (get-ready-for-crux doc))\n\n;;(load-content cruxdb dbr)\n\n\n\n;(str/join \&quot;\&quot;(select [ALL LAST] (get-text cruxdb \&quot;James\&quot; 1 \&quot;1\&quot; :bo)))\n\n        (-&gt;&gt; (output-bo-book-content doc)\n             (group-by (juxt :chapter :vint :class :tag :subtag))\n             (sort))\n             (select [ALL (collect LAST) LAST LAST])\n             (map #(:content %))\n             (reduce into []))&quot;, :offset 417, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n     (group-by (juxt :chapter :vint :class :tag :subtag))\n     (sort)\n     (select [ALL (collect LAST) LAST LAST])\n     (map #(:content %))\n     (reduce into []))&quot;, :offset 196, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n     (group-by (juxt :chapter :vint :class :tag :subtag))\n     (sort)\n     (select [ALL (collect LAST) LAST LAST]))&quot;, :offset 149, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n     (group-by (juxt :chapter :vint :class :tag :subtag))\n     (sort)\n     (select [ALL (collect FIRST) LAST LAST]))&quot;, :offset 150, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n     (group-by (juxt :chapter :vint :class :tag :subtag))\n     (sort)\n     (transform [ALL  LAST LAST]) #(-&gt;&gt; (map #(:content %)) (reduce into [])))&quot;, :offset 182, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n     (group-by (juxt :chapter :vint :class :tag :subtag))\n     (sort)\n     (transform [ALL  LAST LAST]) #(-&gt;&gt; (map (fn [x] (:content x)) (reduce into []))))&quot;, :offset 190, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n     (group-by (juxt :chapter :vint :class :tag :subtag))\n     (sort)\n     (transform [ALL  LAST LAST] #(-&gt;&gt; (map (fn [x] (:content x)) (reduce into [])))))&quot;, :offset 190, :ns &quot;split-text.core&quot;} {:command &quot;(defn join-content [c]\n  (let [[f l] c\n        x (print f)] c))&quot;, :offset 63, :ns &quot;split-text.core&quot;} {:command &quot;(defn join-content [c]\n  (for [e c]\n    (let [[f l ] e\n          x (print f)])))&quot;, :offset 80, :ns &quot;split-text.core&quot;} {:command &quot;(defn join-content [c]\n  (for [e c]\n    (let [[f l ] e\n          x (print l)])))&quot;, :offset 80, :ns &quot;split-text.core&quot;} {:command &quot;(defn join-content [c]\n  (for [e c]\n    (let [[f l] e\n          o (-&gt;&gt; l\n                 (map #(:content %))\n                 (reduce into []))]\n      (into [] f o))))&quot;, :offset 168, :ns &quot;split-text.core&quot;} {:command &quot;(defn join-content [c]\n  (for [e c]\n    (let [[f l] e\n          o (reduce into [] (map #(:content %) l))]\n      (into [] f o))))&quot;, :offset 128, :ns &quot;split-text.core&quot;} {:command &quot;(defn join-content [c]\n  (for [e c]\n    (let [[f l] e\n          o (reduce into [] (map #(:content %) l))\n          x (print o)])))&quot;, :offset 130, :ns &quot;split-text.core&quot;} {:command &quot;(defn join-content [c]\n  (for [e c]\n    (let [[f l] e\n          o (reduce into [] (map #(:content %) l))\n          x (conj [] f o)] x)))&quot;, :offset 136, :ns &quot;split-text.core&quot;} {:command &quot;(defn join-content [c]\n  (for [e c]\n    (let [[f l] e\n          o (str/join \&quot;\&quot;(reduce into [] (map #(:content %) l)))\n          x (conj [] f o)] x)))&quot;, :offset 149, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n     (group-by (juxt :chapter :vint :class :tag :subtag))\n     (sort)\n     (join-content))&quot;, :offset 124, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n     (group-by (juxt :chapter :vint :class :tag :subtag))\n     (sort))&quot;, :offset 104, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n     (group-by (juxt :chapter :vint :index :class :tag :subtag))\n     (sort))&quot;, :offset 111, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n     (group-by (juxt :chapter :vint :index :class :tag))\n     (sort))&quot;, :offset 103, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n     (group-by (juxt :chapter :vint :index :class :tag))\n     (sort)\n     (join-content))&quot;, :offset 123, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n     (group-by (juxt :chapter :vint :index :class :tag))\n     \n     (join-content)\n     (sort))&quot;, :offset 129, :ns &quot;split-text.core&quot;} {:command &quot;(-&gt;&gt; (output-bo-book-content doc)\n     (group-by (juxt :chapter :vint :index :tag :class))\n\n     ;(join-content)\n     (sort))&quot;, :offset 125, :ns &quot;split-text.core&quot;} {:command &quot;doc&quot;, :offset 3, :ns &quot;split-text.core&quot;} {:command &quot;(def testrules {:plot-quals {:out {:graph \&quot;quals.svg\&quot; :data \&quot;quals.tsv\&quot;},},\n                :samtools-index {:out \&quot;bam/sorted.bam.bai\&quot;,},\n                :samtools-sort {:out \&quot;bam/sorted.bam\&quot;}})&quot;, :offset 194, :ns &quot;split-text.core&quot;} {:command &quot;(select [:plot-quals] testrules)&quot;, :offset 32, :ns &quot;split-text.core&quot;} {:command &quot;(select [(collect FIRST MAP-KEYS)] testrules)&quot;, :offset 45, :ns &quot;split-text.core&quot;} {:command &quot;(select [(collect FIRST )] testrules)&quot;, :offset 37, :ns &quot;split-text.core&quot;} {:command &quot;(select [(collect FIRST ) ALL :out] testrules)&quot;, :offset 46, :ns &quot;split-text.core&quot;} {:command &quot;(select [ALL (collect FIRST ) ALL :out] testrules)&quot;, :offset 50, :ns &quot;split-text.core&quot;} {:command &quot;(select [ALL ALL :out] testrules)&quot;, :offset 33, :ns &quot;split-text.core&quot;} {:command &quot;(select [ALL (collect FIRST) ALL :out] testrules)&quot;, :offset 49, :ns &quot;split-text.core&quot;} {:command &quot;(select [(collect FIRST) ALL :out] testrules)&quot;, :offset 45, :ns &quot;split-text.core&quot;} {:command &quot;(select [(collect FIRST)  :out] testrules)&quot;, :offset 42, :ns &quot;split-text.core&quot;} {:command &quot;(select [(collect ALL FIRST)  :out] testrules)&quot;, :offset 46, :ns &quot;split-text.core&quot;} {:command &quot;(select [(collect ALL)  :out] testrules)&quot;, :offset 40, :ns &quot;split-text.core&quot;} {:command &quot;(select [(collect ALL) MAP-KEYS] testrules)&quot;, :offset 43, :ns &quot;split-text.core&quot;} {:command &quot;(select [MAP-KEYS] testrules)&quot;, :offset 29, :ns &quot;split-text.core&quot;} {:command &quot;(select [MAP-KEYS FIRST] testrules)&quot;, :offset 35, :ns &quot;split-text.core&quot;} {:command &quot;(select [MAP-KEYS ALL FIRST] testrules)&quot;, :offset 39, :ns &quot;split-text.core&quot;} {:command &quot;(select [FIRST MAP-KEYS] testrules)&quot;, :offset 35, :ns &quot;split-text.core&quot;} {:command &quot;(select [ALL MAP-KEYS] testrules)&quot;, :offset 33, :ns &quot;split-text.core&quot;} {:command &quot;(select [ALL] testrules)&quot;, :offset 24, :ns &quot;split-text.core&quot;} {:command &quot;(select [FIRST FIRST] testrules)&quot;, :offset 32, :ns &quot;split-text.core&quot;} {:command &quot;(select [(collect FIRST FIRST) ALL :out] testrules)&quot;, :offset 51, :ns &quot;split-text.core&quot;} {:command &quot;(select [(collect FIRST FIRST)  :out] testrules)&quot;, :offset 48, :ns &quot;split-text.core&quot;} {:command &quot;(select [(collect-one FIRST FIRST)  :out] testrules)&quot;, :offset 52, :ns &quot;split-text.core&quot;} {:command &quot;(select [(collect-one FIRST FIRST)  ALL] testrules)&quot;, :offset 51, :ns &quot;split-text.core&quot;} {:command &quot;(select [(collect-one FIRST FIRST)  ALL LAST :out] testrules)&quot;, :offset 61, :ns &quot;split-text.core&quot;} {:command &quot;(def t \&quot;26\\nགལ་སྲིད་དབུགས་མེད་ན་ལུས་ཤི་རོ་ཡིན་པ་ནང་བཞིན་བྱ་བ་[བཟང་པོ་]མ་བསྒྲུབས་ན་དད་པ་ལ་\\n\\nཕན་ནུས་མེད་པ་[དང་དེ་ངོ་མ་མ་རེད།] 26 Just as the body is dead if there is\\nno breath in it, likewise, faith - in the absence of [good] deeds - is\\nineffective [ and not genuine].\\n\\n26 If there is no breath, the body/ like dead is,/ in the same way,/\\n[good] deeds/ if not done/ faith is ineffective [and not genuine].\&quot;)&quot;, :offset 412, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;(26 .*) 26\&quot; t)&quot;, :offset 25, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;(?m(26 .*) 26\&quot; t)&quot;, :offset 28, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;(?m)(26 .*) 26\&quot; t)&quot;, :offset 29, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;(?s)(26 .*) 26\&quot; t)&quot;, :offset 29, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;(?s)(?d)(26 .*) 26\&quot; t)&quot;, :offset 33, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;(?s)(?d)(26.*) 26\&quot; t)&quot;, :offset 32, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;(?s)(?d)(26.*) (26.*) (26.*)\&quot; t)&quot;, :offset 43, :ns &quot;split-text.core&quot;} {:command &quot;(def t (str/trim-newline \&quot;26\\nགལ་སྲིད་དབུགས་མེད་ན་ལུས་ཤི་རོ་ཡིན་པ་ནང་བཞིན་བྱ་བ་[བཟང་པོ་]མ་བསྒྲུབས་ན་དད་པ་ལ་\\n\\nཕན་ནུས་མེད་པ་[དང་དེ་ངོ་མ་མ་རེད།] 26 Just as the body is dead if there is\\nno breath in it, likewise, faith - in the absence of [good] deeds - is\\nineffective [ and not genuine].\\n\\n26 If there is no breath, the body/ like dead is,/ in the same way,/\\n[good] deeds/ if not done/ faith is ineffective [and not genuine].\&quot;))&quot;, :offset 431, :ns &quot;split-text.core&quot;} {:command &quot;\n(def t (str/trim-newline \&quot;26\\nགལ་སྲིད་དབུགས་མེད་ན་ལུས་ཤི་རོ་ཡིན་པ་ནང་བཞིན་བྱ་བ་[བཟང་པོ་]མ་བསྒྲུབས་ན་དད་པ་ལ་\\n\\nཕན་ནུས་མེད་པ་[དང་དེ་ངོ་མ་མ་རེད།] 26 Just as the body is dead if there is\\nno breath in it, likewise, faith - in the absence of [good] deeds - is\\nineffective [ and not genuine].\\n\\n26 If there is no breath, the body/ like dead is,/ in the same way,/\\n[good] deeds/ if not done/ faith is ineffective [and not genuine].\&quot;))&quot;, :offset 432, :ns &quot;split-text.core&quot;} {:command &quot;\n(def t (str/replace \&quot;26\\nགལ་སྲིད་དབུགས་མེད་ན་ལུས་ཤི་རོ་ཡིན་པ་ནང་བཞིན་བྱ་བ་[བཟང་པོ་]མ་བསྒྲུབས་ན་དད་པ་ལ་\\n\\nཕན་ནུས་མེད་པ་[དང་དེ་ངོ་མ་མ་རེད།] 26 Just as the body is dead if there is\\nno breath in it, likewise, faith - in the absence of [good] deeds - is\\nineffective [ and not genuine].\\n\\n26 If there is no breath, the body/ like dead is,/ in the same way,/\\n[good] deeds/ if not done/ faith is ineffective [and not genuine].\&quot;) \&quot;\\n\&quot; \&quot;\&quot;)&quot;, :offset 435, :ns &quot;split-text.core&quot;} {:command &quot;\n(def t (str/replace \&quot;26\\nགལ་སྲིད་དབུགས་མེད་ན་ལུས་ཤི་རོ་ཡིན་པ་ནང་བཞིན་བྱ་བ་[བཟང་པོ་]མ་བསྒྲུབས་ན་དད་པ་ལ་\\n\\nཕན་ནུས་མེད་པ་[དང་དེ་ངོ་མ་མ་རེད།] 26 Just as the body is dead if there is\\nno breath in it, likewise, faith - in the absence of [good] deeds - is\\nineffective [ and not genuine].\\n\\n26 If there is no breath, the body/ like dead is,/ in the same way,/\\n[good] deeds/ if not done/ faith is ineffective [and not genuine].\&quot;) \&quot;\\\\n\&quot; \&quot;\&quot;)&quot;, :offset 436, :ns &quot;split-text.core&quot;} {:command &quot;\n(def t (str/replace \&quot;26\\nགལ་སྲིད་དབུགས་མེད་ན་ལུས་ཤི་རོ་ཡིན་པ་ནང་བཞིན་བྱ་བ་[བཟང་པོ་]མ་བསྒྲུབས་ན་དད་པ་ལ་\\n\\nཕན་ནུས་མེད་པ་[དང་དེ་ངོ་མ་མ་རེད།] 26 Just as the body is dead if there is\\nno breath in it, likewise, faith - in the absence of [good] deeds - is\\nineffective [ and not genuine].\\n\\n26 If there is no breath, the body/ like dead is,/ in the same way,/\\n[good] deeds/ if not done/ faith is ineffective [and not genuine].\&quot; \&quot;\\n\&quot; \&quot;\&quot;))&quot;, :offset 435, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;(?s)(?d)(26.*)(26.*)(26.*)\&quot; t)&quot;, :offset 41, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;(?s)(?d)([0-9]+.*)([0-9]+.*)(26.*)\&quot; t)&quot;, :offset 49, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;(?s)(?d)([0-9]+.*)([0-9]*.*)([0-9]*.*)\&quot; t)&quot;, :offset 53, :ns &quot;split-text.core&quot;} {:command &quot;t&quot;, :offset 1, :ns &quot;split-text.core&quot;} {:command &quot;(def t \&quot;22\\n&lt;class name=\\\&quot;underline\\\&quot;&gt;ཨེབ་ར་ཧམ&lt;/class&gt;་གྱི་དད་པ་དང་ཁོང་གིས་ག་རེ་གནང་པ་གཉིས་མཐུན་གྱི་ཡོད་པ་དེ་ཁྱེད་རང་ཚོས་མཐོང་གི་\\n\\nཡོད་རེད།\\nཁོང་གིས་དཀོན་མཆོག་ལ་བརྩི་བཀུར་ཞུ་གི་ཡོད་པ་དེས་ཁོང་གིས་[དཀོན་མཆོག་ལ་]\\nཡོད་\\n\\nཔའི་དད་པ་དེ་དངོས་གནས་ཡིན་པ་དེ་བསྟན་པ་རེད། 22 You can see that Abraham’s\\nfaith and what he did worked together harmoniously. His faith [in God]\\nwas shown to be genuine by his [obedient] actions. 22 Abraham's faith\\nand/ what he did/ the two/ complemented/ that/ you can see. His\\nobedience to God/ he/ [to God] the faith he has/ is true/ showed. 23\\nགསུང་\\n\\nརབ་ནང་\\n“&lt;class name=\\\&quot;underline\\\&quot;&gt;ཨེབ་ར་ཧམ&lt;/class&gt;་གྱིས་དཀོན་མཆོད་ལ་ཡིད་ཆེས་བྱས་པ་དང༌།\\nཁོང་གི་དད་པ་ལ་བརྟེན་ནས་\\n\\nདཀོན་མཆོག་གིས་ཁོང་མི་བཟང་པོ་དང་སྐྱེས་བུ་དྲང་པོ་ཞིག་ཡིན་པར་ཆ་འཇོག་གནང་པ་རེད།”\\nཅེས་གསུང་\\n\\nགི་ཡོད་པ་དེ་དངོས་སུ་བསྒྲུབས་པ་རེད།\\nབྱས་ཙང་&lt;class name=\\\&quot;underline\\\&quot;&gt;ཨེབ་ར་ཧམ&lt;/class&gt;་ལ་དཀོན་མཆོག་གི་གྲོགས་པོ་ཞེས་འབོད་\\n\\nཀྱི་ཡོད་པ་རེད། 23 The Scripture was fulfilled which states, \\\&quot;Abraham\\nbelieved God, and on account of his faith, God considered Abraham to be\\na good and an upright person.” So Abraham was called God's friend. 23 In\\nthe Scripure, “Abraham/ in God/ believed/ and because of his faith/ God/\\nhim as good and upright person/ considered,” which states, truly\\nmaterialised. So/ to Abraham/ God's friend/ was called.\&quot;)&quot;, :offset 1326, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;(?s)(?d)([0-9]{1,3}\\D*)([0-9]{1,3}\\D*)([0-9]{1,3}\\D*)\&quot; t)&quot;, :offset 68, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;(?s)(?d)([0-9]{1,3}\\D*)([0-9]{1,3}\\D*)([0-9]{1,3}\\D*)*\&quot; t)&quot;, :offset 69, :ns &quot;split-text.core&quot;} {:command &quot;(dotimes [n 2](re-find #\&quot;(?s)(?d)([0-9]{1,3}\\D*)([0-9]{1,3}\\D*)([0-9]{1,3}\\D*)*\&quot; t))&quot;, :offset 84, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;([0-9]{1,3}\\D*)([0-9]{1,3}\\D*)([0-9]{1,3}\\D*)\&quot; t)&quot;, :offset 60, :ns &quot;split-text.core&quot;} {:command &quot;(ns split-text.spec\n  (:require [clojure.spec.alpha :as s]))&quot;, :offset 60, :ns &quot;split-text.core&quot;}], :remote []}}</component>
  <component name="RunManager">
    <configuration name="REPL for split-text" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false" temporary="true">
      <module name="split-text" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="DEPS" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="SOCKET" />
      <setting name="configType" value="SPECIFY" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="DjangoTestsConfigurationType">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="TARGET" value="" />
      <option name="SETTINGS_FILE" value="" />
      <option name="CUSTOM_SETTINGS" value="false" />
      <option name="USE_OPTIONS" value="false" />
      <option name="OPTIONS" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="MAIN_CLASS_NAME" />
      <option name="WORKING_DIRECTORY" />
      <module name="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <option name="filePath" />
      <option name="vmParameters" />
      <option name="alternativeJrePath" />
      <option name="programParameters" />
      <option name="passParentEnvs" value="true" />
      <option name="workingDirectory" />
      <option name="isAlternativeJrePathEnabled" value="false" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="MAIN_CLASS_NAME" />
      <option name="WORKING_DIRECTORY" />
      <module name="" />
      <option name="filePath" />
      <option name="vmParameters" />
      <option name="alternativeJrePath" />
      <option name="programParameters" />
      <option name="passParentEnvs" value="true" />
      <option name="workingDirectory" />
      <option name="isAlternativeJrePathEnabled" value="false" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="MAIN_CLASS_NAME" />
      <option name="WORKING_DIRECTORY" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="Python.FlaskServer">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="Tox" factoryName="Tox">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="tests" factoryName="Doctests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure REPL.REPL for split-text" />
      </list>
    </recent_temporary>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="removed unused code" />
    <MESSAGE value="Chapter and verse numbers added" />
    <MESSAGE value="Finished gettinginto db format for both couch and crux" />
    <MESSAGE value="After some success with crux" />
    <MESSAGE value="After first design of metadata" />
    <MESSAGE value="Start of output" />
    <MESSAGE value="Start of plain text output" />
    <MESSAGE value="Refactor Looking to work without db" />
    <MESSAGE value="Outputing using hiccup and no db" />
    <MESSAGE value="End of evening with markdown" />
    <option name="LAST_COMMIT_MESSAGE" value="End of evening with markdown" />
  </component>
  <component name="WindowStateProjectService">
    <state x="362" y="58" key="#Plugins" timestamp="1590093955232">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state x="362" y="58" key="#Plugins/0.0.1536.834@0.0.1536.834" timestamp="1590093955232" />
    <state x="503" y="219" key="#com.intellij.fileTypes.FileTypeChooser" timestamp="1590176470725">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state x="503" y="219" key="#com.intellij.fileTypes.FileTypeChooser/0.0.1536.834@0.0.1536.834" timestamp="1590176470725" />
    <state x="500" y="164" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog" timestamp="1589646502873">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state x="500" y="164" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog/0.0.1536.834@0.0.1536.834" timestamp="1589646502873" />
    <state width="664" height="349" key="GridCell.Tab.0.bottom" timestamp="1589731037335">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state width="664" height="349" key="GridCell.Tab.0.bottom/0.0.1536.834@0.0.1536.834" timestamp="1589731037335" />
    <state width="664" height="349" key="GridCell.Tab.0.center" timestamp="1589731037335">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state width="664" height="349" key="GridCell.Tab.0.center/0.0.1536.834@0.0.1536.834" timestamp="1589731037335" />
    <state width="664" height="349" key="GridCell.Tab.0.left" timestamp="1589731037335">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state width="664" height="349" key="GridCell.Tab.0.left/0.0.1536.834@0.0.1536.834" timestamp="1589731037335" />
    <state width="664" height="349" key="GridCell.Tab.0.right" timestamp="1589731037335">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state width="664" height="349" key="GridCell.Tab.0.right/0.0.1536.834@0.0.1536.834" timestamp="1589731037335" />
    <state width="664" height="349" key="GridCell.Tab.1.bottom" timestamp="1589731037335">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state width="664" height="349" key="GridCell.Tab.1.bottom/0.0.1536.834@0.0.1536.834" timestamp="1589731037335" />
    <state width="664" height="349" key="GridCell.Tab.1.center" timestamp="1589731037335">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state width="664" height="349" key="GridCell.Tab.1.center/0.0.1536.834@0.0.1536.834" timestamp="1589731037335" />
    <state width="664" height="349" key="GridCell.Tab.1.left" timestamp="1589731037335">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state width="664" height="349" key="GridCell.Tab.1.left/0.0.1536.834@0.0.1536.834" timestamp="1589731037335" />
    <state width="664" height="349" key="GridCell.Tab.1.right" timestamp="1589731037335">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state width="664" height="349" key="GridCell.Tab.1.right/0.0.1536.834@0.0.1536.834" timestamp="1589731037335" />
    <state x="279" y="62" key="SettingsEditor" timestamp="1590163261619">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state x="279" y="62" key="SettingsEditor/0.0.1536.834@0.0.1536.834" timestamp="1590163261619" />
    <state x="362" y="150" key="Vcs.Push.Dialog.v2" timestamp="1590192135235">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state x="362" y="150" key="Vcs.Push.Dialog.v2/0.0.1536.834@0.0.1536.834" timestamp="1590192135235" />
    <state x="431" y="155" width="695" height="676" key="search.everywhere.popup" timestamp="1589970555790">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state x="431" y="155" width="695" height="676" key="search.everywhere.popup/0.0.1536.834@0.0.1536.834" timestamp="1589970555790" />
  </component>
</project>