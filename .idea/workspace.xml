<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BranchesTreeState">
    <expand>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </expand>
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e71e3968-e7af-4df1-adb9-986cabb8ecaf" name="Default Changelist" comment="End of Phase A - Markdown to html">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.nrepl-port" beforeDir="false" afterPath="$PROJECT_DIR$/.nrepl-port" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/doc2docx.bat" beforeDir="false" afterPath="$PROJECT_DIR$/doc2docx.bat" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docx2md.bat" beforeDir="false" afterPath="$PROJECT_DIR$/docx2md.bat" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/md2out.bat" beforeDir="false" afterPath="$PROJECT_DIR$/md2out.bat" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/resources/css/main.css" beforeDir="false" afterPath="$PROJECT_DIR$/resources/css/main.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/split_text/config.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/split_text/config.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/split_text/core.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/split_text/core.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/split_text/markdown.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/split_text/markdown.clj" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DepsProjectDetails">
    <option name="cachedModuleDetails">
      <map>
        <entry key="$PROJECT_DIR$/deps.edn">
          <value>
            <ModuleDetails>
              <option name="details" value="{:paths [&quot;src&quot;], :deps {org.clojure/clojure {:mvn/version &quot;1.10.1&quot;}, hickory/hickory {:mvn/version &quot;0.7.1&quot;}, com.rpl/specter {:mvn/version &quot;1.1.3&quot;}, org.clojure/data.json {:mvn/version &quot;1.0.0&quot;}, clj-http/clj-http {:mvn/version &quot;3.10.1&quot;}, hiccup/hiccup {:mvn/version &quot;2.0.0-alpha2&quot;}, org.clojure/tools.cli {:mvn/version &quot;1.0.194&quot;}}, :aliases {:deps {:extra-deps {org.clojure/tools.deps.alpha {:mvn/version &quot;0.6.496&quot;}}}, :test {:extra-paths [&quot;test&quot;]}}, :mvn/repos {&quot;central&quot; {:url &quot;https://repo1.maven.org/maven2/&quot;}, &quot;clojars&quot; {:url &quot;https://repo.clojars.org/&quot;}}, :system-aliases #{:test :deps}, :deps-tree {org.clojure/data.json {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\data.json\\1.0.0\\data.json-1.0.0.jar&quot;], :children ()}, org.clojure/clojure {:mvn/version &quot;1.10.1&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\clojure\\1.10.1\\clojure-1.10.1.jar&quot;], :children (org.clojure/core.specs.alpha org.clojure/spec.alpha)}, commons-codec/commons-codec {:mvn/version &quot;1.12&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\commons-codec\\commons-codec\\1.12\\commons-codec-1.12.jar&quot;], :children ()}, org.clojure/core.specs.alpha {:mvn/version &quot;0.2.44&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojure], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\core.specs.alpha\\0.2.44\\core.specs.alpha-0.2.44.jar&quot;], :children ()}, org.clojure/spec.alpha {:mvn/version &quot;0.2.176&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojure], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\spec.alpha\\0.2.176\\spec.alpha-0.2.176.jar&quot;], :children ()}, org.clojure/tools.cli {:mvn/version &quot;1.0.194&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\tools.cli\\1.0.194\\tools.cli-1.0.194.jar&quot;], :children ()}, org.apache.httpcomponents/httpasyncclient {:mvn/version &quot;4.1.4&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\apache\\httpcomponents\\httpasyncclient\\4.1.4\\httpasyncclient-4.1.4.jar&quot;], :children (org.apache.httpcomponents/httpcore-nio)}, org.clojure/google-closure-library {:mvn/version &quot;0.0-20160609-f42b4a24&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojurescript], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\google-closure-library\\0.0-20160609-f42b4a24\\google-closure-library-0.0-20160609-f42b4a24.jar&quot;], :children (org.clojure/google-closure-library-third-party)}, org.clojure/clojurescript {:mvn/version &quot;1.9.293&quot;, :deps/manifest :mvn, :dependents [hickory/hickory], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\clojurescript\\1.9.293\\clojurescript-1.9.293.jar&quot;], :children (org.clojure/google-closure-library org.mozilla/rhino org.clojure/tools.reader com.google.javascript/closure-compiler-unshaded)}, slingshot/slingshot {:mvn/version &quot;0.12.2&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\slingshot\\slingshot\\0.12.2\\slingshot-0.12.2.jar&quot;], :children ()}, org.apache.httpcomponents/httpcore-nio {:mvn/version &quot;4.4.10&quot;, :deps/manifest :mvn, :dependents [org.apache.httpcomponents/httpasyncclient], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\apache\\httpcomponents\\httpcore-nio\\4.4.10\\httpcore-nio-4.4.10.jar&quot;], :children ()}, commons-io/commons-io {:mvn/version &quot;2.6&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\commons-io\\commons-io\\2.6\\commons-io-2.6.jar&quot;], :children ()}, com.google.jsinterop/jsinterop-annotations {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :dependents [com.google.javascript/closure-compiler-unshaded], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\google\\jsinterop\\jsinterop-annotations\\1.0.0\\jsinterop-annotations-1.0.0.jar&quot;], :children ()}, clj-http/clj-http {:mvn/version &quot;3.10.1&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\clj-http\\clj-http\\3.10.1\\clj-http-3.10.1.jar&quot;], :children (commons-codec/commons-codec org.apache.httpcomponents/httpasyncclient slingshot/slingshot commons-io/commons-io org.apache.httpcomponents/httpcore org.apache.httpcomponents/httpclient-cache org.apache.httpcomponents/httpclient potemkin/potemkin org.apache.httpcomponents/httpmime)}, org.apache.httpcomponents/httpcore {:mvn/version &quot;4.4.12&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\apache\\httpcomponents\\httpcore\\4.4.12\\httpcore-4.4.12.jar&quot;], :children ()}, org.apache.httpcomponents/httpclient-cache {:mvn/version &quot;4.5.10&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\apache\\httpcomponents\\httpclient-cache\\4.5.10\\httpclient-cache-4.5.10.jar&quot;], :children ()}, clj-tuple/clj-tuple {:mvn/version &quot;0.2.2&quot;, :deps/manifest :mvn, :dependents [potemkin/potemkin], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\clj-tuple\\clj-tuple\\0.2.2\\clj-tuple-0.2.2.jar&quot;], :children ()}, org.mozilla/rhino {:mvn/version &quot;1.7R5&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojurescript], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\mozilla\\rhino\\1.7R5\\rhino-1.7R5.jar&quot;], :children ()}, org.clojure/google-closure-library-third-party {:mvn/version &quot;0.0-20160609-f42b4a24&quot;, :deps/manifest :mvn, :dependents [org.clojure/google-closure-library], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\google-closure-library-third-party\\0.0-20160609-f42b4a24\\google-closure-library-third-party-0.0-20160609-f42b4a24.jar&quot;], :children ()}, hiccup/hiccup {:mvn/version &quot;2.0.0-alpha2&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\hiccup\\hiccup\\2.0.0-alpha2\\hiccup-2.0.0-alpha2.jar&quot;], :children ()}, riddley/riddley {:mvn/version &quot;0.1.12&quot;, :deps/manifest :mvn, :dependents [com.rpl/specter], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\riddley\\riddley\\0.1.12\\riddley-0.1.12.jar&quot;], :children ()}, com.google.javascript/closure-compiler-externs {:mvn/version &quot;v20160911&quot;, :deps/manifest :mvn, :dependents [com.google.javascript/closure-compiler-unshaded], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\google\\javascript\\closure-compiler-externs\\v20160911\\closure-compiler-externs-v20160911.jar&quot;], :children ()}, commons-logging/commons-logging {:mvn/version &quot;1.2&quot;, :deps/manifest :mvn, :dependents [org.apache.httpcomponents/httpclient], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\commons-logging\\commons-logging\\1.2\\commons-logging-1.2.jar&quot;], :children ()}, com.google.guava/guava {:mvn/version &quot;19.0&quot;, :deps/manifest :mvn, :dependents [com.google.javascript/closure-compiler-unshaded], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\google\\guava\\guava\\19.0\\guava-19.0.jar&quot;], :children ()}, viebel/codox-klipse-theme {:mvn/version &quot;0.0.1&quot;, :deps/manifest :mvn, :dependents [hickory/hickory], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\viebel\\codox-klipse-theme\\0.0.1\\codox-klipse-theme-0.0.1.jar&quot;], :children ()}, quoin/quoin {:mvn/version &quot;0.1.2&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [hickory/hickory], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\quoin\\quoin\\0.1.2\\quoin-0.1.2.jar&quot;], :children ()}, args4j/args4j {:mvn/version &quot;2.0.26&quot;, :deps/manifest :mvn, :dependents [com.google.javascript/closure-compiler-unshaded], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\args4j\\args4j\\2.0.26\\args4j-2.0.26.jar&quot;], :children ()}, org.apache.httpcomponents/httpclient {:mvn/version &quot;4.5.10&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\apache\\httpcomponents\\httpclient\\4.5.10\\httpclient-4.5.10.jar&quot;], :children (commons-logging/commons-logging)}, hickory/hickory {:mvn/version &quot;0.7.1&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\hickory\\hickory\\0.7.1\\hickory-0.7.1.jar&quot;], :children (org.clojure/clojurescript viebel/codox-klipse-theme quoin/quoin org.jsoup/jsoup)}, org.clojure/tools.reader {:mvn/version &quot;1.0.0-beta3&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojurescript], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\clojure\\tools.reader\\1.0.0-beta3\\tools.reader-1.0.0-beta3.jar&quot;], :children ()}, org.jsoup/jsoup {:mvn/version &quot;1.9.2&quot;, :deps/manifest :mvn, :dependents [hickory/hickory], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\jsoup\\jsoup\\1.9.2\\jsoup-1.9.2.jar&quot;], :children ()}, potemkin/potemkin {:mvn/version &quot;0.4.5&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\potemkin\\potemkin\\0.4.5\\potemkin-0.4.5.jar&quot;], :children (clj-tuple/clj-tuple)}, com.rpl/specter {:mvn/version &quot;1.1.3&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\rpl\\specter\\1.1.3\\specter-1.1.3.jar&quot;], :children (riddley/riddley)}, com.google.javascript/closure-compiler-unshaded {:mvn/version &quot;v20160911&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojurescript], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\google\\javascript\\closure-compiler-unshaded\\v20160911\\closure-compiler-unshaded-v20160911.jar&quot;], :children (com.google.jsinterop/jsinterop-annotations com.google.javascript/closure-compiler-externs com.google.guava/guava args4j/args4j com.google.protobuf/protobuf-java com.google.code.findbugs/jsr305 com.google.code.gson/gson)}, com.google.protobuf/protobuf-java {:mvn/version &quot;2.5.0&quot;, :deps/manifest :mvn, :dependents [com.google.javascript/closure-compiler-unshaded], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\google\\protobuf\\protobuf-java\\2.5.0\\protobuf-java-2.5.0.jar&quot;], :children ()}, org.apache.httpcomponents/httpmime {:mvn/version &quot;4.5.10&quot;, :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [clj-http/clj-http], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\org\\apache\\httpcomponents\\httpmime\\4.5.10\\httpmime-4.5.10.jar&quot;], :children ()}, com.google.code.findbugs/jsr305 {:mvn/version &quot;1.3.9&quot;, :deps/manifest :mvn, :dependents [com.google.javascript/closure-compiler-unshaded], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\google\\code\\findbugs\\jsr305\\1.3.9\\jsr305-1.3.9.jar&quot;], :children ()}, com.google.code.gson/gson {:mvn/version &quot;2.2.4&quot;, :deps/manifest :mvn, :dependents [com.google.javascript/closure-compiler-unshaded], :paths [&quot;C:\\Users\\MartinRoberts\\.m2\\repository\\com\\google\\code\\gson\\gson\\2.2.4\\gson-2.2.4.jar&quot;], :children ()}}, :test-paths [&quot;test&quot;]}" />
              <option name="hash" value="df23eccf0f6f0a89580933b736de932c" />
            </ModuleDetails>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1bz5Y2j2j21xIBm3ZWy9ZqBFJOE" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="GoToNamespace.includeLibraries" value="false" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="cursive.last.file.extension.C\:/Users/MartinRoberts/private_projects/split-text/src" value="clj" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
  </component>
  <component name="ReplState" timestamp="1590701615740">{:repl-history {:ide [], :local [{:command &quot;(defn handle-document [style options]\n  (let [{:keys [output file]} options\n        filestub (first (str/split file #\&quot;\\.\&quot;))]\n    (do (sh/sh \&quot;doc2docx.bat\&quot; filestub))))&quot;, :offset 167, :ns &quot;split-text.core&quot;} {:command &quot;(defn handle-document [style options]\n  (let [{:keys [output file]} options\n        filestub (first (str/split file #\&quot;\\.\&quot;))\n        markdownfile (str filestub \&quot;.md\&quot;)\n        {:keys [exit out] }(sh/sh \&quot;doc2docx.bat\&quot; filestub)]\n    (if (not= exit 0) (print out)\n        (case style\n          \&quot;tibetan\&quot; (output-bo-markdown (process-markdown-file markdownfile))))))&quot;, :offset 361, :ns &quot;split-text.core&quot;} {:command &quot;(ns split-text.core\n  (:require [split-text.config :refer :all]\n    [split-text.io :refer :all]\n    ;[split-text.meta :refer :all]\n    ;[split-text.inwards :refer :all]\n    ;[split-text.outwards :refer :all]\n    [split-text.markdown :refer :all]\n    ;[crux.api :as crux]\n    [clojure.string :as str]\n    [com.rpl.specter :refer :all]\n    [hiccup2.core :as h]\n    [clojure.tools.cli :as cli]\n    [clojure.java.shell :as sh])\n  (:gen-class))&quot;, :offset 439, :ns &quot;split-text.core&quot;} {:command &quot;(defn handle-document [style options]\n  (let [{:keys [output file]} options\n        filestub (first (str/split file #\&quot;\\.\&quot;))\n        markdownfile (str filestub \&quot;.md\&quot;)\n        outputfilename (str filestub \&quot;.\&quot; output)\n        {:keys [exit out] }(sh/sh \&quot;doc2docx.bat\&quot; filestub)]\n    (if (not= exit 0) (print out)\n        (case style\n          \&quot;tibetan\&quot; (output-md (output-bo-markdown (process-markdown-file markdownfile)) outputfilename)))))&quot;, :offset 437, :ns &quot;split-text.core&quot;} {:command &quot;(spit \&quot;James.html\&quot; (output-bo-markdown (process-markdown-file \&quot;James.md\&quot;)))&quot;, :offset 75, :ns &quot;split-text.core&quot;} {:command &quot;(spit \&quot;James.html\&quot; (reduce str (output-bo-markdown (process-markdown-file \&quot;James.md\&quot;))))&quot;, :offset 88, :ns &quot;split-text.core&quot;} {:command &quot;(str/replace \&quot;1 sjsjsjsj[2]sjsjsjs\&quot; #\&quot;(\\d+) (.*)\&quot; \&quot;^$1^ $2\&quot;)&quot;, :offset 60, :ns &quot;split-text.core&quot;} {:command &quot;(str/replace \&quot;1sjsjsjsj[2]sjsjsjs\&quot; #\&quot;(\\d+) ?(.*)\&quot; \&quot;^$1^ $2\&quot;)&quot;, :offset 60, :ns &quot;split-text.core&quot;} {:command &quot;(str/replace \&quot;1 sjsjsjsj[2]sjsjsjs\&quot; #\&quot;(\\d+)(\\s*)?(.*)\&quot; \&quot;^$1^ $2\&quot;)&quot;, :offset 65, :ns &quot;split-text.core&quot;} {:command &quot;(str/replace \&quot;1 sjsjsjsj[2]sjsjsjs\&quot; #\&quot;(\\d+)(\\s*)?(.*)\&quot; \&quot;^$1^ $3\&quot;)&quot;, :offset 65, :ns &quot;split-text.core&quot;} {:command &quot;(str/replace \&quot;1    sjsjsjsj[2]sjsjsjs\&quot; #\&quot;(\\d+)(\\s*)?(.*)\&quot; \&quot;^$1^ $3\&quot;)&quot;, :offset 68, :ns &quot;split-text.core&quot;} {:command &quot;(str/replace \&quot;1    sjsjsjsj[2]sjsjsjs\&quot; #\&quot;(\\d+)(?:\\s*)?(.*)\&quot; \&quot;^$1^ $2\&quot;)&quot;, :offset 70, :ns &quot;split-text.core&quot;} {:command &quot;(def verse-number-format \&quot;^$1^ $2\&quot;)&quot;, :offset 35, :ns &quot;split-text.config&quot;} {:command &quot;(def s21 \&quot;21 \\\\[དཀོན་མཆོག་གིས་\\\\] ང་ཚོའི་མེས་ པོ་[ཨེབ་ར་ཧམ]{.underline}་གྱི་\\\\[དད་པ་ལ་ཚོད་ལྟ་\\\\] གནང་དུས་[ཨེབ་ར་ཧམ]{.underline}་གྱིས་ཁོང་ལ་བརྩི་བཀུར་ཞུས་ནས་རང་གི་བུ་ དེ་མཆོད་ཁྲི་ཐོག་ལ་བཞག་པ་དེ་ཁྱེད་རང་ཚོས་དྲན་གྱི་མི་འདུག་གས། [ཨེབ་ར་ཧམ]{.underline}་གྱིས་ཁོང་ལ་བརྩི་ བཀུར་ཞུས་པ་ལ་བརྟེན་ནས་དཀོན་མཆོག་གིས་ཁོང་མི་བཟང་པོ་ཞིག་དང་སྐྱེས་བུ་དྲང་པོ་ཞིག་ཡིན་པར་ཆ་ འཇོག་གནང་པ་རེད། \\n\&quot;)&quot;, :offset 372, :ns &quot;split-text.core&quot;} {:command &quot;(str/replace s21 #\&quot;(\\[{1}([^\\[].*?)\\]\\{\\.underline\\})\&quot; split-text.config/name-highlight)&quot;, :offset 88, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;(\\[{1}([^\\[].*?)\\]\\{\\.underline\\})\&quot; s21)&quot;, :offset 51, :ns &quot;split-text.core&quot;} {:command &quot;s21&quot;, :offset 3, :ns &quot;split-text.core&quot;} {:command &quot;(-main \&quot;-f\&quot; \&quot;James.doc\&quot; \&quot;tibetan\&quot;)&quot;, :offset 34, :ns &quot;split-text.core&quot;} {:command &quot;(def x {:lang :bo :type :h2})&quot;, :offset 29, :ns &quot;split-text.core&quot;} {:command &quot;(def l {:lang :bo :type :h2})&quot;, :offset 29, :ns &quot;split-text.core&quot;} {:command &quot;(def l {:lang :bo :type :h3})&quot;, :offset 29, :ns &quot;split-text.core&quot;} {:command &quot;(and (#{:bo :eng}(:lang l)) (#{ :verse :h2 :h3} (:type l)))&quot;, :offset 59, :ns &quot;split-text.core&quot;} {:command &quot;(true? (and (#{:bo :eng}(:lang l)) (#{ :verse :h2 :h3} (:type l))))&quot;, :offset 67, :ns &quot;split-text.core&quot;} {:command &quot;(#{:bo :eng}(:lang l))&quot;, :offset 22, :ns &quot;split-text.core&quot;} {:command &quot;(def l {:lang :back :type :h3})&quot;, :offset 31, :ns &quot;split-text.core&quot;} {:command &quot;(sh/sh \&quot;doc2docx.bat\&quot; \&quot;James\&quot;)&quot;, :offset 30, :ns &quot;split-text.core&quot;} {:command &quot;(def l {:lang :eng :type :h3})&quot;, :offset 30, :ns &quot;split-text.core&quot;} {:command &quot;(def l {:lang :eng :type :verse})&quot;, :offset 33, :ns &quot;split-text.core&quot;} {:command &quot;(or (and (contains? #{:bo :eng} (:lang l)) (contains? #{:verse :h2 :h3} (:type l)))  (= (:type l) :h1))&quot;, :offset 103, :ns &quot;split-text.core&quot;} {:command &quot;(str/index-of \&quot;\\\\[དཀོན་མཆོག་གིས་\\\\] ང་ཚོའི་མེས་ པོ་[ཨེབ་ར་ཧམ]{.underline}་གྱི་\\\\[དད་པ་ལ་ཚོད་ལྟ་\\\\] གནང་དུས་[ཨེབ་ར་ཧམ]{.underline}་གྱིས་ཁོང་ལ་བརྩི་བཀུར་ཞུས་ནས་རང་གི་བུ་\&quot; \&quot;{.underline}\&quot;)&quot;, :offset 184, :ns &quot;split-text.core&quot;} {:command &quot;(str/last-index-of \&quot;\\\\[དཀོན་མཆོག་གིས་\\\\] ང་ཚོའི་མེས་ པོ་[ཨེབ་ར་ཧམ]{.underline}་གྱི་\\\\[དད་པ་ལ་ཚོད་ལྟ་\\\\] གནང་དུས་[ཨེབ་ར་ཧམ]{.underline}་གྱིས་ཁོང་ལ་བརྩི་བཀུར་ཞུས་ནས་རང་གི་བུ་\&quot; \&quot;{.underline}\&quot;)&quot;, :offset 189, :ns &quot;split-text.core&quot;} {:command &quot;(str/last-index-of \&quot;་གྱིས་ཁོང་ལ་བརྩི་བཀུར་ཞུས་ནས་རང་གི་བུ་\&quot; \&quot;{.underline}\&quot;)&quot;, :offset 75, :ns &quot;split-text.core&quot;} {:command &quot;(str/last-index-of \&quot;\\\\@དཀོན་མཆོག་གིས་\\\\@ ང་ཚོའི་མེས་ པོ་[ཨེབ་ར་ཧམ]{.underline}་གྱི་\\\\@དད་པ་ལ་ཚོད་ལྟ་\\\\@ གནང་དུས་[ཨེབ་ར་ཧམ]{.underline}་གྱིས་ཁོང་ལ་བརྩི་བཀུར་ཞུས་ནས་རང་གི་བུ་\&quot; \&quot;{.underline}\&quot;)&quot;, :offset 100} {:command &quot;(str \&quot;\\\\[\&quot;)&quot;, :offset 11, :ns &quot;split-text.core&quot;} {:command &quot;(let j (slurp \&quot;James.in.md\&quot;))&quot;, :offset 29, :ns &quot;split-text.core&quot;} {:command &quot;(let j (read-markdown \&quot;James.in.md\&quot;))&quot;, :offset 37, :ns &quot;split-text.core&quot;} {:command &quot;(def j (read-markdown \&quot;James.in.md\&quot;))&quot;, :offset 37, :ns &quot;split-text.core&quot;} {:command &quot;(process-markdown j)&quot;, :offset 20, :ns &quot;split-text.core&quot;} {:command &quot;(let l \&quot;\\\\[དཀོན་མཆོག་གིས་\\\\] ང་ཚོའི་མེས་ པོ་[ཨེབ་ར་ཧམ]{.underline}་གྱི་\\\\[དད་པ་ལ་ཚོད་ལྟ་\\\\] གནང་དུས་[ཨེབ་ར་ཧམ]{.underline}་གྱིས་ཁོང་ལ་བརྩི་བཀུར་ཞུས་ནས་རང་གི་བུ་ \&quot;)&quot;, :offset 163, :ns &quot;split-text.core&quot;} {:command &quot;(def l \&quot;\\\\[དཀོན་མཆོག་གིས་\\\\] ང་ཚོའི་མེས་ པོ་[ཨེབ་ར་ཧམ]{.underline}་གྱི་\\\\[དད་པ་ལ་ཚོད་ལྟ་\\\\] གནང་དུས་[ཨེབ་ར་ཧམ]{.underline}་གྱིས་ཁོང་ལ་བརྩི་བཀུར་ཞུས་ནས་རང་གི་བུ་ \&quot;)&quot;, :offset 163, :ns &quot;split-text.core&quot;} {:command &quot;(replace_underlines l)&quot;, :offset 22, :ns &quot;split-text.core&quot;} {:command &quot;(defn replace_underlines [l]\n  (let [l1 (str/replace (str/replace l #\&quot;\\[\&quot; \&quot;\\\\@\&quot;) #\&quot;\\]\&quot; \&quot;\\\\#\&quot;)\n        l2 (str/replace l1 #\&quot;((\\[(.*?))\\]\\{\\.underline\\})\&quot; split-text.config/name-highlight)\n        l3 (str/replace (str/replace l2 #\&quot;\\@\&quot; \&quot;\\\\[\&quot;) #\&quot;\\#\&quot; \&quot;\\\\]\&quot;)]\n    l1))&quot;, :offset 262, :ns &quot;split-text.markdown&quot;} {:command &quot;(split-text.markdown/replace_underlines l)&quot;, :offset 42, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;\\\\\\[\&quot; \&quot;[\&quot;)&quot;, :offset 21, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;\\\\\\[\&quot; \&quot;a[\&quot;)&quot;, :offset 22, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;\\\\\\[\&quot; \&quot;\\[\&quot;)&quot;, :offset 22, :ns &quot;split-text.core&quot;} {:command &quot;(re-find #\&quot;\\\\\\[\&quot; \&quot;\\\\[\&quot;)&quot;, :offset 23, :ns &quot;split-text.core&quot;} {:command &quot;(str/replace l #\&quot;\\\\\\[\&quot; \&quot;\\\\@\&quot;)&quot;, :offset 29, :ns &quot;split-text.core&quot;} {:command &quot;(str/replace (str/replace l #\&quot;\\\\\\[\&quot; \&quot;\\\\@\&quot;) #\&quot;\\\\\\]\&quot; \&quot;\\\\#\&quot;)&quot;, :offset 57, :ns &quot;split-text.core&quot;} {:command &quot;(def l1(str/replace (str/replace l #\&quot;\\\\\\[\&quot; \&quot;\\\\@\&quot;) #\&quot;\\\\\\]\&quot; \&quot;\\\\#\&quot;))&quot;, :offset 65, :ns &quot;split-text.core&quot;} {:command &quot;(str/replace l1 #\&quot;((\\[(.*?))\\]\\{\\.underline\\})\&quot; split-text.config/name-highlight)&quot;, :offset 81, :ns &quot;split-text.core&quot;} {:command &quot;(def l2 (str/replace l1 #\&quot;((\\[(.*?))\\]\\{\\.underline\\})\&quot; split-text.config/name-highlight))&quot;, :offset 90, :ns &quot;split-text.core&quot;} {:command &quot;(str/replace (str/replace l2 #\&quot;\\\\\\@\&quot; \&quot;\\\\[\&quot;) #\&quot;\\\\\\#\&quot; \&quot;\\\\]\&quot;)&quot;, :offset 58, :ns &quot;split-text.core&quot;} {:command &quot;(str/replace (str/replace l2 #\&quot;@\&quot; \&quot;\\\\[\&quot;) #\&quot;#\&quot; \&quot;\\\\]\&quot;)&quot;, :offset 52, :ns &quot;split-text.core&quot;} {:command &quot;(def l2 (str/replace l1 #\&quot;(([^\\[]\\[(.*?))\\]\\{\\.underline\\})\&quot; split-text.config/name-highlight))&quot;, :offset 95, :ns &quot;split-text.core&quot;} {:command &quot;(def l2 (str/replace l1 #\&quot;(([^\\[].*?)\\]\\{\\.underline\\})\&quot; split-text.config/name-highlight))&quot;, :offset 91, :ns &quot;split-text.core&quot;} {:command &quot;l2&quot;, :offset 2, :ns &quot;split-text.core&quot;} {:command &quot;(str/replace l1 #\&quot;(\\[([^\\[].*?)\\]\\{\\.underline\\})\&quot; split-text.config/name-highlight)&quot;, :offset 84, :ns &quot;split-text.core&quot;} {:command &quot;(def l2(str/replace l1 #\&quot;(\\[([^\\[].*?)\\]\\{\\.underline\\})\&quot; split-text.config/name-highlight))&quot;, :offset 92, :ns &quot;split-text.core&quot;} {:command &quot;(str/replace (str/replace l2 #\&quot;\\@\&quot; \&quot;\\\\[\&quot;) #\&quot;\\#\&quot; \&quot;\\\\]\&quot;)&quot;, :offset 54, :ns &quot;split-text.core&quot;} {:command &quot;(str/split \&quot;&lt;p&gt;&lt;span class=\\\&quot;vn\\\&quot;&gt;1&lt;/span&gt; ཡི་གེ་འདི་དཀོན་མཆོག་དང་གཙོ་བོ་ཡེ་ཤུ་མ་ཤི་ཀའི་ཞབས་ཕྱི་{ལྗཱེམྶ}་གིས་བཏང་གནང་པ་རེད། ངས་ ཡི་གེ་འདི་ཕྱིའི་རྒྱལ་ཁབ་ཁག་ནང་ཁ་འཐོར་བའི་{རྗིའུ}འི་ཆོས་གྲོགས་ཕོ་མོ་ཚོ་ལ་འབྲི་གི་ཡོད། འདི་ [{ཨིཛ་རེལ}་པའི་] རུས་སྡེ་བཅུ་གཉིས་དེ་ཚོའི་ཁོངས་སུ་གཏོགས་པའི་མི་དེ་ཚོའི་ཆེད་དུ་རེད། ཁྱེད་རང་ ཚོ་ཚང་མ་ལ་འཚམས་འདྲི་ཡོད།&lt;/p&gt;\&quot;\n           #\&quot;\\d{1,3}&lt;/span&gt;\&quot;)&quot;, :offset 369, :ns &quot;split-text.core&quot;} {:command &quot;(str/split \&quot;&lt;p&gt;&lt;span class=\\\&quot;vn\\\&quot;&gt;1&lt;/span&gt; ཡི་གེ་འདི་དཀོན་མཆོག་དང་གཙོ་བོ་ཡེ་ཤུ་མ་ཤི་ཀའི་ཞབས་ཕྱི་{ལྗཱེམྶ}་གིས་བཏང་གནང་པ་རེད། ངས་ ཡི་གེ་འདི་ཕྱིའི་རྒྱལ་ཁབ་ཁག་ནང་ཁ་འཐོར་བའི་{རྗིའུ}འི་ཆོས་གྲོགས་ཕོ་མོ་ཚོ་ལ་འབྲི་གི་ཡོད། འདི་ [{ཨིཛ་རེལ}་པའི་] རུས་སྡེ་བཅུ་གཉིས་དེ་ཚོའི་ཁོངས་སུ་གཏོགས་པའི་མི་དེ་ཚོའི་ཆེད་དུ་རེད། ཁྱེད་རང་ ཚོ་ཚང་མ་ལ་འཚམས་འདྲི་ཡོད།&lt;/p&gt;\&quot;\n           #\&quot;(?:\\d{1,3}&lt;/span&gt;)\&quot;)&quot;, :offset 373, :ns &quot;split-text.core&quot;} {:command &quot;(str/split \&quot;&lt;p&gt;&lt;span class=\\\&quot;vn\\\&quot;&gt;1&lt;/span&gt; ཡི་གེ་འདི་དཀོན་མཆོག་དང་གཙོ་བོ་ཡེ་ཤུ་མ་ཤི་ཀའི་ཞབས་ཕྱི་{ལྗཱེམྶ&lt;/span&gt;་གིས་བཏང་གནང་པ་རེད། ངས་ ཡི་གེ་འདི་ཕྱིའི་རྒྱལ་ཁབ་ཁག་ནང་ཁ་འཐོར་བའི་{རྗིའུ}འི་ཆོས་གྲོགས་ཕོ་མོ་ཚོ་ལ་འབྲི་གི་ཡོད། འདི་ [{ཨིཛ་རེལ}་པའི་] རུས་སྡེ་བཅུ་གཉིས་དེ་ཚོའི་ཁོངས་སུ་གཏོགས་པའི་མི་དེ་ཚོའི་ཆེད་དུ་རེད། ཁྱེད་རང་ ཚོ་ཚང་མ་ལ་འཚམས་འདྲི་ཡོད།&lt;/p&gt;\&quot;\n           #\&quot;(?:\\d{1,3}&lt;/span&gt;)\&quot;)&quot;, :offset 379, :ns &quot;split-text.core&quot;} {:command &quot;(def s \&quot;&lt;p&gt;&lt;span class=\\\&quot;vn\\\&quot;&gt;1&lt;/span&gt; ཡི་གེ་འདི་དཀོན་མཆོག་དང་གཙོ་བོ་ཡེ་ཤུ་མ་ཤི་ཀའི་ཞབས་ཕྱི་{ལྗཱེམྶ}་གིས་བཏང་གནང་པ་རེད། ངས་ ཡི་གེ་འདི་ཕྱིའི་རྒྱལ་ཁབ་ཁག་ནང་ཁ་འཐོར་བའི་{རྗིའུ}འི་ཆོས་གྲོགས་ཕོ་མོ་ཚོ་ལ་འབྲི་གི་ཡོད། འདི་ [{ཨིཛ་རེལ}་པའི་] རུས་སྡེ་བཅུ་གཉིས་དེ་ཚོའི་ཁོངས་སུ་གཏོགས་པའི་མི་དེ་ཚོའི་ཆེད་དུ་རེད། ཁྱེད་རང་ ཚོ་ཚང་མ་ལ་འཚམས་འདྲི་ཡོད།&lt;/p&gt;\&quot;)&quot;, :offset 336, :ns &quot;split-text.core&quot;} {:command &quot;(str/index-of s \&quot;&lt;/span&gt;\&quot;)&quot;, :offset 26, :ns &quot;split-text.core&quot;} {:command &quot;(+ 8(str/index-of s \&quot;&lt;/span&gt;\&quot;))&quot;, :offset 31, :ns &quot;split-text.core&quot;} {:command &quot;(nth s 29)&quot;, :offset 10, :ns &quot;split-text.core&quot;} {:command &quot;(nth s 28)&quot;, :offset 10, :ns &quot;split-text.core&quot;} {:command &quot;(subs s 0(+ 7 (str/index-of s \&quot;&lt;/span&gt;\&quot;)))&quot;, :offset 42, :ns &quot;split-text.core&quot;} {:command &quot;(str/index-of s \&quot;&lt;/p&gt;\&quot;)&quot;, :offset 23, :ns &quot;split-text.core&quot;} {:command &quot;(subs s 28)&quot;, :offset 11, :ns &quot;split-text.core&quot;} {:command &quot;(subs s 28 320)&quot;, :offset 15, :ns &quot;split-text.core&quot;} {:command &quot;(-main \&quot;-f\&quot; \&quot;James.doc\&quot; \&quot;bo\&quot;)&quot;, :offset 29, :ns &quot;split-text.core&quot;} {:command &quot;(process-markdown-file \&quot;James.in.md\&quot;)&quot;, :offset 37, :ns &quot;split-text.core&quot;} {:command &quot;(def x [ 1 2 3 4 5 6 7 8 9])&quot;, :offset 28, :ns &quot;split-text.core&quot;} {:command &quot;(def y [ 1 2 3])&quot;, :offset 16, :ns &quot;split-text.core&quot;} {:command &quot;(subvec x (count y))&quot;, :offset 20, :ns &quot;split-text.core&quot;} {:command &quot;(vec {:D 1} {:d 2})&quot;, :offset 19, :ns &quot;split-text.core&quot;} {:command &quot;[{:D 1} {:d 2}]&quot;, :offset 15, :ns &quot;split-text.core&quot;} {:command &quot;(output-boeng-interlinear (process-markdown-file \&quot;James.in.md\&quot;))&quot;, :offset 64, :ns &quot;split-text.core&quot;} {:command &quot;(for [[l r] '[1 2 3 4 5 6]] (print l))&quot;, :offset 38, :ns &quot;split-text.core&quot;} {:command &quot;(for [[l r] [1 2 3 4 5 6]] (print l))&quot;, :offset 37, :ns &quot;split-text.core&quot;} {:command &quot;(for [[l r] (vec 1 2 3 4 5 6)] (print l))&quot;, :offset 41, :ns &quot;split-text.core&quot;} {:command &quot;(for [[l r] (vec '(1 2 3 4 5 6))] (print l))&quot;, :offset 44, :ns &quot;split-text.core&quot;} {:command &quot;(for [[l r] ] (print l))&quot;, :offset 12} {:command &quot; (process-markdown-file \&quot;James.in.md\&quot;)&quot;, :offset 38, :ns &quot;split-text.core&quot;} {:command &quot;(for [[d f] [\&quot;a\&quot; \&quot;b\&quot; \&quot;c\&quot; \&quot;d\&quot;]] (print d))&quot;, :offset 41, :ns &quot;split-text.core&quot;} {:command &quot;(into [] {:a 1} {:b 2})&quot;, :offset 23, :ns &quot;abcd&quot;} {:command &quot;(select [ALL #(= (:lang %) :bo)] (process-markdown-file \&quot;Jamea.in.md\&quot;))&quot;, :offset 71, :ns &quot;split-text.core&quot;} {:command &quot;(select [ALL #(= (:lang %) :bo)] (process-markdown-file \&quot;James.in.md\&quot;))&quot;, :offset 71, :ns &quot;split-text.core&quot;} {:command &quot;(select [ALL #(= (:lang %) :bo) :text] (process-markdown-file \&quot;James.in.md\&quot;))&quot;, :offset 77, :ns &quot;split-text.core&quot;} {:command &quot;(-main \&quot;-f\&quot; \&quot;James.doc\&quot; \&quot;boeng-cols\&quot;)&quot;, :offset 37, :ns &quot;split-text.core&quot;} {:command &quot;(-main \&quot;-f\&quot; \&quot;James.doc\&quot; \&quot;boeng\&quot;)&quot;, :offset 32, :ns &quot;split-text.core&quot;} {:command &quot;(-main \&quot;-f\&quot; \&quot;James\&quot; \&quot;-d\&quot; \&quot;C:\\\\Users\\\\MartinRoberts\\\\Sync\\\\NT\\\\Epistles\\\\2019- A2A-11 Epistles only James\\\\original\&quot; \&quot;boeng\&quot;)&quot;, :offset 124, :ns &quot;split-text.core&quot;} {:command &quot;(sh/sh \&quot;doc2docx.bat\&quot; \&quot;\\\&quot;C:\\Users\\MartinRoberts\\Sync\\NT\\Epistles\\2019- A2A-11 Epistles only James\\\&quot;\\original\\James.doc\&quot; \&quot;\\\&quot;C:\\Users\\MartinRoberts\\Sync\\NT\\Epistles\\2019- A2A-11 Epistles only James\\\&quot;\\original\\James.docx\&quot;)&quot;, :offset 219, :ns &quot;split-text.core&quot;} {:command &quot;(sh/sh \&quot;doc2docx.bat\&quot; \&quot;\\\&quot;C:\\\\Users\\\\MartinRoberts\\\\Sync\\\\NT\\\\Epistles\\\\2019- A2A-11 Epistles only James\\\&quot;\\\\original\\\\James.doc\&quot; \&quot;\\\&quot;C:\\\\Users\\\\MartinRoberts\\\\Sync\\\\NT\\\\Epistles\\\\2019- A2A-11 Epistles only James\\\&quot;\\\\original\\\\James.docx\&quot;)&quot;, :offset 235, :ns &quot;split-text.core&quot;} {:command &quot;(sh/sh \&quot;doc2docx.bat\&quot; \&quot;C:\\\\Users\\\\MartinRoberts\\\\Sync\\\\NT\\\\Epistles\\\\2019- A2A-11 Epistles only James\\\\original\\\\James.doc\&quot; \&quot;C:\\\\Users\\\\MartinRoberts\\\\Sync\\\\NT\\\\Epistles\\\\2019- A2A-11 Epistles only James\\\\original\\\\James.docx\&quot;)&quot;, :offset 227, :ns &quot;split-text.core&quot;} {:command &quot;(-main \&quot;-f\&quot; \&quot;James\&quot; \&quot;-d\&quot; \&quot;C:\\\\Users\\\\MartinRoberts\\\\Sync\\\\NT\\\\Epistles\\\\2019- A2A-11 Epistles only James\&quot; \&quot;boeng\&quot;)&quot;, :offset 114, :ns &quot;split-text.core&quot;} {:command &quot;(output-boeng-markdown (process-markdown-file \&quot;James.in.md\&quot;))&quot;, :offset 61, :ns &quot;split-text.core&quot;} {:command &quot;(-main \&quot;-f\&quot; \&quot;James\&quot; \&quot;-d\&quot; \&quot;C:\\\\Users\\\\MartinRoberts\\\\Sync\\\\NT\\\\Epistles\\\\2019-A2A-11-Epistles-only-James\&quot; \&quot;boeng\&quot;)&quot;, :offset 113, :ns &quot;split-text.core&quot;}], :remote []}}</component>
  <component name="RunManager">
    <configuration name="REPL for split-text" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false" temporary="true">
      <module name="split-text" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="DEPS" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="SOCKET" />
      <setting name="configType" value="SPECIFY" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="DjangoTestsConfigurationType">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="TARGET" value="" />
      <option name="SETTINGS_FILE" value="" />
      <option name="CUSTOM_SETTINGS" value="false" />
      <option name="USE_OPTIONS" value="false" />
      <option name="OPTIONS" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="MAIN_CLASS_NAME" />
      <option name="WORKING_DIRECTORY" />
      <module name="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <option name="filePath" />
      <option name="vmParameters" />
      <option name="alternativeJrePath" />
      <option name="programParameters" />
      <option name="passParentEnvs" value="true" />
      <option name="workingDirectory" />
      <option name="isAlternativeJrePathEnabled" value="false" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="MAIN_CLASS_NAME" />
      <option name="WORKING_DIRECTORY" />
      <module name="" />
      <option name="filePath" />
      <option name="vmParameters" />
      <option name="alternativeJrePath" />
      <option name="programParameters" />
      <option name="passParentEnvs" value="true" />
      <option name="workingDirectory" />
      <option name="isAlternativeJrePathEnabled" value="false" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="MAIN_CLASS_NAME" />
      <option name="WORKING_DIRECTORY" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="Python.FlaskServer">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="Tox" factoryName="Tox">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="tests" factoryName="Doctests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure REPL.REPL for split-text" />
      </list>
    </recent_temporary>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="removed unused code" />
    <MESSAGE value="Chapter and verse numbers added" />
    <MESSAGE value="Finished gettinginto db format for both couch and crux" />
    <MESSAGE value="After some success with crux" />
    <MESSAGE value="After first design of metadata" />
    <MESSAGE value="Start of output" />
    <MESSAGE value="Start of plain text output" />
    <MESSAGE value="Refactor Looking to work without db" />
    <MESSAGE value="Outputing using hiccup and no db" />
    <MESSAGE value="End of evening with markdown" />
    <MESSAGE value="End of Phase A - Markdown to html" />
    <MESSAGE value="Interlinear text phase one" />
    <option name="LAST_COMMIT_MESSAGE" value="Interlinear text phase one" />
  </component>
  <component name="WindowStateProjectService">
    <state x="362" y="58" key="#Plugins" timestamp="1590093955232">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state x="362" y="58" key="#Plugins/0.0.1536.834@0.0.1536.834" timestamp="1590093955232" />
    <state x="503" y="219" key="#com.intellij.fileTypes.FileTypeChooser" timestamp="1590176470725">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state x="503" y="219" key="#com.intellij.fileTypes.FileTypeChooser/0.0.1536.834@0.0.1536.834" timestamp="1590176470725" />
    <state x="500" y="164" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog" timestamp="1589646502873">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state x="500" y="164" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog/0.0.1536.834@0.0.1536.834" timestamp="1589646502873" />
    <state x="517" y="262" key="ANALYSIS_DLG_com.intellij.analysis.BaseAnalysisAction$1" timestamp="1590267232629">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state x="517" y="262" key="ANALYSIS_DLG_com.intellij.analysis.BaseAnalysisAction$1/0.0.1536.834@0.0.1536.834" timestamp="1590267232629" />
    <state width="664" height="349" key="GridCell.Tab.0.bottom" timestamp="1589731037335">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state width="664" height="349" key="GridCell.Tab.0.bottom/0.0.1536.834@0.0.1536.834" timestamp="1589731037335" />
    <state width="664" height="349" key="GridCell.Tab.0.center" timestamp="1589731037335">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state width="664" height="349" key="GridCell.Tab.0.center/0.0.1536.834@0.0.1536.834" timestamp="1589731037335" />
    <state width="664" height="349" key="GridCell.Tab.0.left" timestamp="1589731037335">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state width="664" height="349" key="GridCell.Tab.0.left/0.0.1536.834@0.0.1536.834" timestamp="1589731037335" />
    <state width="664" height="349" key="GridCell.Tab.0.right" timestamp="1589731037335">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state width="664" height="349" key="GridCell.Tab.0.right/0.0.1536.834@0.0.1536.834" timestamp="1589731037335" />
    <state width="664" height="349" key="GridCell.Tab.1.bottom" timestamp="1589731037335">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state width="664" height="349" key="GridCell.Tab.1.bottom/0.0.1536.834@0.0.1536.834" timestamp="1589731037335" />
    <state width="664" height="349" key="GridCell.Tab.1.center" timestamp="1589731037335">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state width="664" height="349" key="GridCell.Tab.1.center/0.0.1536.834@0.0.1536.834" timestamp="1589731037335" />
    <state width="664" height="349" key="GridCell.Tab.1.left" timestamp="1589731037335">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state width="664" height="349" key="GridCell.Tab.1.left/0.0.1536.834@0.0.1536.834" timestamp="1589731037335" />
    <state width="664" height="349" key="GridCell.Tab.1.right" timestamp="1589731037335">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state width="664" height="349" key="GridCell.Tab.1.right/0.0.1536.834@0.0.1536.834" timestamp="1589731037335" />
    <state x="350" y="160" key="IDE.errors.dialog" timestamp="1590226879137">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state x="350" y="160" key="IDE.errors.dialog/0.0.1536.834@0.0.1536.834" timestamp="1590226879137" />
    <state x="279" y="62" key="SettingsEditor" timestamp="1590229041377">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state x="279" y="62" key="SettingsEditor/0.0.1536.834@0.0.1536.834" timestamp="1590229041377" />
    <state x="362" y="150" key="Vcs.Push.Dialog.v2" timestamp="1590281068370">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state x="362" y="150" key="Vcs.Push.Dialog.v2/0.0.1536.834@0.0.1536.834" timestamp="1590281068370" />
    <state x="431" y="155" width="695" height="676" key="search.everywhere.popup" timestamp="1590253648120">
      <screen x="0" y="0" width="1536" height="834" />
    </state>
    <state x="431" y="155" width="695" height="676" key="search.everywhere.popup/0.0.1536.834@0.0.1536.834" timestamp="1590253648120" />
  </component>
</project>